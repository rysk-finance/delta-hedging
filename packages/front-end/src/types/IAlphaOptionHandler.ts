/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  BaseContract,
  BigNumber,
  BigNumberish,
  BytesLike,
  CallOverrides,
  ContractTransaction,
  Overrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import { FunctionFragment, Result } from "@ethersproject/abi";
import { Listener, Provider } from "@ethersproject/providers";
import type {
  TypedEventFilter,
  TypedEvent,
  TypedListener,
  OnEvent,
} from "./common";

export declare namespace Types {
  export type OptionSeriesStruct = {
    expiration: BigNumberish;
    strike: BigNumberish;
    isPut: boolean;
    underlying: string;
    strikeAsset: string;
    collateral: string;
  };

  export type OptionSeriesStructOutput = [
    BigNumber,
    BigNumber,
    boolean,
    string,
    string,
    string
  ] & {
    expiration: BigNumber;
    strike: BigNumber;
    isPut: boolean;
    underlying: string;
    strikeAsset: string;
    collateral: string;
  };
}

export interface IAlphaOptionHandlerInterface extends utils.Interface {
  contractName: "IAlphaOptionHandler";
  functions: {
    "createOrder((uint64,uint128,bool,address,address,address),uint256,uint256,uint256,address,bool,uint256[2])": FunctionFragment;
    "createStrangle((uint64,uint128,bool,address,address,address),(uint64,uint128,bool,address,address,address),uint256,uint256,uint256,uint256,uint256,address,uint256[2],uint256[2])": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "createOrder",
    values: [
      Types.OptionSeriesStruct,
      BigNumberish,
      BigNumberish,
      BigNumberish,
      string,
      boolean,
      [BigNumberish, BigNumberish]
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "createStrangle",
    values: [
      Types.OptionSeriesStruct,
      Types.OptionSeriesStruct,
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BigNumberish,
      string,
      [BigNumberish, BigNumberish],
      [BigNumberish, BigNumberish]
    ]
  ): string;

  decodeFunctionResult(
    functionFragment: "createOrder",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "createStrangle",
    data: BytesLike
  ): Result;

  events: {};
}

export interface IAlphaOptionHandler extends BaseContract {
  contractName: "IAlphaOptionHandler";
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: IAlphaOptionHandlerInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    createOrder(
      _optionSeries: Types.OptionSeriesStruct,
      _amount: BigNumberish,
      _price: BigNumberish,
      _orderExpiry: BigNumberish,
      _buyerAddress: string,
      _isBuyBack: boolean,
      _spotMovementRange: [BigNumberish, BigNumberish],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    createStrangle(
      _optionSeriesCall: Types.OptionSeriesStruct,
      _optionSeriesPut: Types.OptionSeriesStruct,
      _amountCall: BigNumberish,
      _amountPut: BigNumberish,
      _priceCall: BigNumberish,
      _pricePut: BigNumberish,
      _orderExpiry: BigNumberish,
      _buyerAddress: string,
      _callSpotMovementRange: [BigNumberish, BigNumberish],
      _putSpotMovementRange: [BigNumberish, BigNumberish],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;
  };

  createOrder(
    _optionSeries: Types.OptionSeriesStruct,
    _amount: BigNumberish,
    _price: BigNumberish,
    _orderExpiry: BigNumberish,
    _buyerAddress: string,
    _isBuyBack: boolean,
    _spotMovementRange: [BigNumberish, BigNumberish],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  createStrangle(
    _optionSeriesCall: Types.OptionSeriesStruct,
    _optionSeriesPut: Types.OptionSeriesStruct,
    _amountCall: BigNumberish,
    _amountPut: BigNumberish,
    _priceCall: BigNumberish,
    _pricePut: BigNumberish,
    _orderExpiry: BigNumberish,
    _buyerAddress: string,
    _callSpotMovementRange: [BigNumberish, BigNumberish],
    _putSpotMovementRange: [BigNumberish, BigNumberish],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  callStatic: {
    createOrder(
      _optionSeries: Types.OptionSeriesStruct,
      _amount: BigNumberish,
      _price: BigNumberish,
      _orderExpiry: BigNumberish,
      _buyerAddress: string,
      _isBuyBack: boolean,
      _spotMovementRange: [BigNumberish, BigNumberish],
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    createStrangle(
      _optionSeriesCall: Types.OptionSeriesStruct,
      _optionSeriesPut: Types.OptionSeriesStruct,
      _amountCall: BigNumberish,
      _amountPut: BigNumberish,
      _priceCall: BigNumberish,
      _pricePut: BigNumberish,
      _orderExpiry: BigNumberish,
      _buyerAddress: string,
      _callSpotMovementRange: [BigNumberish, BigNumberish],
      _putSpotMovementRange: [BigNumberish, BigNumberish],
      overrides?: CallOverrides
    ): Promise<[BigNumber, BigNumber]>;
  };

  filters: {};

  estimateGas: {
    createOrder(
      _optionSeries: Types.OptionSeriesStruct,
      _amount: BigNumberish,
      _price: BigNumberish,
      _orderExpiry: BigNumberish,
      _buyerAddress: string,
      _isBuyBack: boolean,
      _spotMovementRange: [BigNumberish, BigNumberish],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    createStrangle(
      _optionSeriesCall: Types.OptionSeriesStruct,
      _optionSeriesPut: Types.OptionSeriesStruct,
      _amountCall: BigNumberish,
      _amountPut: BigNumberish,
      _priceCall: BigNumberish,
      _pricePut: BigNumberish,
      _orderExpiry: BigNumberish,
      _buyerAddress: string,
      _callSpotMovementRange: [BigNumberish, BigNumberish],
      _putSpotMovementRange: [BigNumberish, BigNumberish],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    createOrder(
      _optionSeries: Types.OptionSeriesStruct,
      _amount: BigNumberish,
      _price: BigNumberish,
      _orderExpiry: BigNumberish,
      _buyerAddress: string,
      _isBuyBack: boolean,
      _spotMovementRange: [BigNumberish, BigNumberish],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    createStrangle(
      _optionSeriesCall: Types.OptionSeriesStruct,
      _optionSeriesPut: Types.OptionSeriesStruct,
      _amountCall: BigNumberish,
      _amountPut: BigNumberish,
      _priceCall: BigNumberish,
      _pricePut: BigNumberish,
      _orderExpiry: BigNumberish,
      _buyerAddress: string,
      _callSpotMovementRange: [BigNumberish, BigNumberish],
      _putSpotMovementRange: [BigNumberish, BigNumberish],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;
  };
}
