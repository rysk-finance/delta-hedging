/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  BlackScholesTest,
  BlackScholesTestInterface,
} from "../BlackScholesTest";

const _abi = [
  {
    inputs: [],
    name: "PRBMathSD59x18__AbsInputTooSmall",
    type: "error",
  },
  {
    inputs: [],
    name: "PRBMathSD59x18__DivInputTooSmall",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "rAbs",
        type: "uint256",
      },
    ],
    name: "PRBMathSD59x18__DivOverflow",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "x",
        type: "int256",
      },
    ],
    name: "PRBMathSD59x18__Exp2InputTooBig",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "x",
        type: "int256",
      },
    ],
    name: "PRBMathSD59x18__ExpInputTooBig",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "x",
        type: "int256",
      },
    ],
    name: "PRBMathSD59x18__LogInputTooSmall",
    type: "error",
  },
  {
    inputs: [],
    name: "PRBMathSD59x18__MulInputTooSmall",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "rAbs",
        type: "uint256",
      },
    ],
    name: "PRBMathSD59x18__MulOverflow",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
    ],
    name: "PRBMathUD60x18__SqrtOverflow",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "prod1",
        type: "uint256",
      },
    ],
    name: "PRBMath__MulDivFixedPointOverflow",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "prod1",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "denominator",
        type: "uint256",
      },
    ],
    name: "PRBMath__MulDivOverflow",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "strike",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "expiration",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "vol",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "rfr",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "isPut",
        type: "bool",
      },
    ],
    name: "getDelta",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "strike",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "expiration",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "vol",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "rfr",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "isPut",
        type: "bool",
      },
    ],
    name: "retBlackScholesCalc",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50611592806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c806350befa7c1461003b578063679dfe3114610060575b600080fd5b61004e610049366004611412565b610073565b60405190815260200160405180910390f35b61004e61006e366004611412565b610090565b60006100838787878787876100a0565b90505b9695505050505050565b6000610083878787878787610110565b6000806100bd6301e187e0425b6100b79089611482565b9061015d565b905060006100ce8989848989610179565b9050836100f7576100ee816020015182600001518b8b8560400151610203565b92505050610086565b6100ee816020015182600001518b8b8560400151610265565b6000806101216301e187e0426100ad565b9050600061013289898489896102bb565b50905083610143576100ee8161033e565b61015461014f82611499565b61033e565b6100ee90611499565b600061017283670de0b6b3a76400008461038e565b9392505050565b61019d60405180606001604052806000815260200160008152602001600081525090565b6000806101ad88888888886102bb565b9150915060405180606001604052808281526020018381526020016101f56101f0670de0b6b3a76400006101e090611499565b6101ea898c61045f565b9061045f565b610524565b905298975050505050505050565b60008061021086886114ae565b9050600061021d8861033e565b9050600061022a8361033e565b90506000610238888461045f565b9050600061024a836101ea8a8a61045f565b905061025681836114ae565b9b9a5050505050505050505050565b60008061027287876114ae565b9050600061028261014f89611499565b9050600061028f8361033e565b9050600061029d888461045f565b905060006102af836101ea8a8a61045f565b905061025682826114ae565b600080806102ea86856102da671bc16d674ec800006100b78a80610594565b6102e491906114ed565b90610594565b905060006103006102fb8a8a61015d565b6105a0565b9050600061030e8383611505565b905061032361031c896105d2565b8890610594565b935061032f818561062a565b94505050509550959350505050565b600080610353836713a04bbdfdc9be8861062a565b90506000610360826106f0565b61037290670de0b6b3a7640000611505565b90506103866706f05b59d3b200008261045f565b949350505050565b60008080600019858709858702925082811083820303915050806000036103c8578382816103be576103be611546565b0492505050610172565b8381106103f757604051631dcf306360e21b815260048101829052602481018590526044015b60405180910390fd5b600084868809600260036001881981018916988990049182028318808302840302808302840302808302840302808302840302808302840302918202909203026000889003889004909101858311909403939093029303949094049190911702949350505050565b6000600160ff1b8314806104765750600160ff1b82145b1561049457604051630d01a11b60e21b815260040160405180910390fd5b600080600085126104a557846104aa565b846000035b9150600084126104ba57836104bf565b836000035b905060006104cd83836107c2565b90506001600160ff1b038111156104fa5760405163bf79e8d960e01b8152600481018290526024016103ee565b6000198087139086138082186001146105135782610518565b826000035b98975050505050505050565b600068023f2fa8f6da5b9d311982121561054057506000919050565b680736ea4425c11ac631821261056c576040516399bb754160e01b8152600481018390526024016103ee565b6714057b7ef767814f8202610172670de0b6b3a76400006706f05b59d3b20000830105610888565b600061017283836107c2565b60006714057b7ef767814f670de0b6b3a76400006105bd8461091e565b02816105cb576105cb611546565b0592915050565b60007812725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f2182111561061157604051636155b67d60e01b8152600481018390526024016103ee565b610624670de0b6b3a76400008302610a03565b92915050565b6000600160ff1b8314806106415750600160ff1b82145b1561065f5760405163b3c754a360e01b815260040160405180910390fd5b600080600085126106705784610675565b846000035b915060008412610685578361068a565b836000035b905060006106a183670de0b6b3a76400008461038e565b90506001600160ff1b038111156106ce57604051637cb4bef560e01b8152600481018290526024016103ee565b6000198087139086138082186001146106e75782610518565b61051883611499565b60008060008312156107125761070d670de0b6b3a7640000611499565b61071c565b670de0b6b3a76400005b9050600061072984610b72565b9050600061076361074267048bd65eab1458008461045f565b61075490670de0b6b3a7640000611505565b670de0b6b3a76400009061062a565b9050600061077082610bad565b905060006107966101f0856101ea61078f670de0b6b3a7640000611499565b889061045f565b905060006107a4838361045f565b6107b690670de0b6b3a76400006114ae565b9050610518868261045f565b60008080600019848609848602925082811083820303915050670de0b6b3a764000081106108065760405163698d9a0160e11b8152600481018290526024016103ee565b600080670de0b6b3a764000086880991506706f05b59d3b1ffff82119050826000036108445780670de0b6b3a7640000850401945050505050610624565b620400008285030493909111909103600160ee1b02919091177faccb18165bd6fe31ae1cf318dc5b51eee0e1ba569b88cd74c1773b91fac106690201905092915050565b6000808212156108d55768033dd1780914b97114198212156108ac57506000919050565b6108b882600003610888565b6ec097ce7bc90715b34b9f1000000000816105cb576105cb611546565b680a688906bd8b00000082126109015760405163e69458f960e01b8152600481018390526024016103ee565b670de0b6b3a7640000604083901b0461017281610c37565b919050565b60008082136109435760405163309fa7dd60e11b8152600481018390526024016103ee565b6000670de0b6b3a7640000831261095c57506001610976565b6000199050826ec097ce7bc90715b34b9f10000000000492505b600061098b670de0b6b3a76400008505611333565b670de0b6b3a764000081029350905083811d670de0b6b3a763ffff1981016109b557505002919050565b6706f05b59d3b200005b60008113156109fa57670de0b6b3a7640000828002059150671bc16d674ec8000082126109f2579384019360019190911d905b60011d6109bf565b50505002919050565b600081600003610a1557506000919050565b50600181600160801b8110610a2f5760409190911b9060801c5b600160401b8110610a455760209190911b9060401c5b6401000000008110610a5c5760109190911b9060201c5b620100008110610a715760089190911b9060101c5b6101008110610a855760049190911b9060081c5b60108110610a985760029190911b9060041c5b60088110610aa857600182901b91505b6001828481610ab957610ab9611546565b048301901c91506001828481610ad157610ad1611546565b048301901c91506001828481610ae957610ae9611546565b048301901c91506001828481610b0157610b01611546565b048301901c91506001828481610b1957610b19611546565b048301901c91506001828481610b3157610b31611546565b048301901c91506001828481610b4957610b49611546565b048301901c91506000828481610b6157610b61611546565b049050808310156101725782610386565b6000600160ff1b8203610b9857604051631d0742e360e21b815260040160405180910390fd5b60008212610ba65781610624565b5060000390565b600080610bc2670ebade9d363752008461045f565b90506000610bdd846101ea67142aa211c5f94dff1985611505565b90506000610bf7856101ea6713b9e044372a020085611505565b90506000610c12866101ea6703f2bc462909bfff1985611505565b90506000610c2c876101ea6703895629ed6af00085611505565b979650505050505050565b600160bf1b678000000000000000821615610c5b5768016a09e667f3bcc9090260401c5b674000000000000000821615610c7a576801306fe0a31b7152df0260401c5b672000000000000000821615610c99576801172b83c7d517adce0260401c5b671000000000000000821615610cb85768010b5586cf9890f62a0260401c5b670800000000000000821615610cd7576801059b0d31585743ae0260401c5b670400000000000000821615610cf657680102c9a3e778060ee70260401c5b670200000000000000821615610d155768010163da9fb33356d80260401c5b670100000000000000821615610d3457680100b1afa5abcbed610260401c5b6680000000000000821615610d525768010058c86da1c09ea20260401c5b6640000000000000821615610d70576801002c605e2e8cec500260401c5b6620000000000000821615610d8e57680100162f3904051fa10260401c5b6610000000000000821615610dac576801000b175effdc76ba0260401c5b6608000000000000821615610dca57680100058ba01fb9f96d0260401c5b6604000000000000821615610de85768010002c5cc37da94920260401c5b6602000000000000821615610e06576801000162e525ee05470260401c5b6601000000000000821615610e245768010000b17255775c040260401c5b65800000000000821615610e41576801000058b91b5bc9ae0260401c5b65400000000000821615610e5e57680100002c5c89d5ec6d0260401c5b65200000000000821615610e7b5768010000162e43f4f8310260401c5b65100000000000821615610e9857680100000b1721bcfc9a0260401c5b65080000000000821615610eb55768010000058b90cf1e6e0260401c5b65040000000000821615610ed2576801000002c5c863b73f0260401c5b65020000000000821615610eef57680100000162e430e5a20260401c5b65010000000000821615610f0c576801000000b1721835510260401c5b648000000000821615610f2857680100000058b90c0b490260401c5b644000000000821615610f445768010000002c5c8601cc0260401c5b642000000000821615610f60576801000000162e42fff00260401c5b641000000000821615610f7c5768010000000b17217fbb0260401c5b640800000000821615610f98576801000000058b90bfce0260401c5b640400000000821615610fb457680100000002c5c85fe30260401c5b640200000000821615610fd05768010000000162e42ff10260401c5b640100000000821615610fec57680100000000b17217f80260401c5b63800000008216156110075768010000000058b90bfc0260401c5b6340000000821615611022576801000000002c5c85fe0260401c5b632000000082161561103d57680100000000162e42ff0260401c5b6310000000821615611058576801000000000b17217f0260401c5b630800000082161561107357680100000000058b90c00260401c5b630400000082161561108e5768010000000002c5c8600260401c5b63020000008216156110a9576801000000000162e4300260401c5b63010000008216156110c45768010000000000b172180260401c5b628000008216156110de576801000000000058b90c0260401c5b624000008216156110f857680100000000002c5c860260401c5b622000008216156111125768010000000000162e430260401c5b6210000082161561112c57680100000000000b17210260401c5b620800008216156111465768010000000000058b910260401c5b62040000821615611160576801000000000002c5c80260401c5b6202000082161561117a57680100000000000162e40260401c5b62010000821615611194576801000000000000b1720260401c5b6180008216156111ad57680100000000000058b90260401c5b6140008216156111c65768010000000000002c5d0260401c5b6120008216156111df576801000000000000162e0260401c5b6110008216156111f85768010000000000000b170260401c5b610800821615611211576801000000000000058c0260401c5b61040082161561122a57680100000000000002c60260401c5b61020082161561124357680100000000000001630260401c5b61010082161561125c57680100000000000000b10260401c5b608082161561127457680100000000000000590260401c5b604082161561128c576801000000000000002c0260401c5b60208216156112a457680100000000000000160260401c5b60108216156112bc576801000000000000000b0260401c5b60088216156112d457680100000000000000060260401c5b60048216156112ec57680100000000000000030260401c5b600282161561130457680100000000000000010260401c5b600182161561131c57680100000000000000010260401c5b670de0b6b3a76400000260409190911c60bf031c90565b6000600160801b821061135357608091821c9161135090826114ed565b90505b600160401b821061137157604091821c9161136e90826114ed565b90505b640100000000821061139057602091821c9161138d90826114ed565b90505b6201000082106113ad57601091821c916113aa90826114ed565b90505b61010082106113c957600891821c916113c690826114ed565b90505b601082106113e457600491821c916113e190826114ed565b90505b600482106113ff57600291821c916113fc90826114ed565b90505b60028210610919576106246001826114ed565b60008060008060008060c0878903121561142b57600080fd5b863595506020870135945060408701359350606087013592506080870135915060a0870135801515811461145e57600080fd5b809150509295509295509295565b634e487b7160e01b600052601160045260246000fd5b6000828210156114945761149461146c565b500390565b6000600160ff1b8201610ba657610ba661146c565b60008083128015600160ff1b8501841216156114cc576114cc61146c565b6001600160ff1b03840183138116156114e7576114e761146c565b50500390565b600082198211156115005761150061146c565b500190565b600080821280156001600160ff1b03849003851316156115275761152761146c565b600160ff1b83900384128116156115405761154061146c565b50500190565b634e487b7160e01b600052601260045260246000fdfea26469706673582212207fd7118d1d04eae85b332aef8576c115a9f3118bd7f393bb47f1884906761df264736f6c634300080e0033";

type BlackScholesTestConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BlackScholesTestConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BlackScholesTest__factory extends ContractFactory {
  constructor(...args: BlackScholesTestConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<BlackScholesTest> {
    return super.deploy(overrides || {}) as Promise<BlackScholesTest>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): BlackScholesTest {
    return super.attach(address) as BlackScholesTest;
  }
  connect(signer: Signer): BlackScholesTest__factory {
    return super.connect(signer) as BlackScholesTest__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BlackScholesTestInterface {
    return new utils.Interface(_abi) as BlackScholesTestInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BlackScholesTest {
    return new Contract(address, _abi, signerOrProvider) as BlackScholesTest;
  }
}
