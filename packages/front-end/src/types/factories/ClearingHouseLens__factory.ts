/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ClearingHouseLens,
  ClearingHouseLensInterface,
} from "../ClearingHouseLens";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IClearingHouse",
        name: "_clearingHouse",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "clearingHouse",
    outputs: [
      {
        internalType: "contract IClearingHouse",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "accountId",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "collateralId",
        type: "uint32",
      },
    ],
    name: "getAccountCollateralBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "accountId",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "collateralId",
        type: "uint32",
      },
    ],
    name: "getAccountCollateralInfo",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "collateral",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "accountId",
        type: "uint256",
      },
    ],
    name: "getAccountInfo",
    outputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "int256",
        name: "vQuoteBalance",
        type: "int256",
      },
      {
        internalType: "uint32[]",
        name: "activeCollateralIds",
        type: "uint32[]",
      },
      {
        internalType: "uint32[]",
        name: "activePoolIds",
        type: "uint32[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "accountId",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "poolId",
        type: "uint32",
      },
      {
        internalType: "int24",
        name: "tickLower",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "tickUpper",
        type: "int24",
      },
    ],
    name: "getAccountLiquidityPositionInfo",
    outputs: [
      {
        internalType: "uint8",
        name: "limitOrderType",
        type: "uint8",
      },
      {
        internalType: "uint128",
        name: "liquidity",
        type: "uint128",
      },
      {
        internalType: "int256",
        name: "vTokenAmountIn",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "sumALastX128",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "sumBInsideLastX128",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "sumFpInsideLastX128",
        type: "int256",
      },
      {
        internalType: "uint256",
        name: "sumFeeInsideLastX128",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "accountId",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "poolId",
        type: "uint32",
      },
    ],
    name: "getAccountLiquidityPositionList",
    outputs: [
      {
        components: [
          {
            internalType: "int24",
            name: "tickLower",
            type: "int24",
          },
          {
            internalType: "int24",
            name: "tickUpper",
            type: "int24",
          },
        ],
        internalType: "struct IClearingHouseStructures.TickRange[]",
        name: "activeTickRanges",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "accountId",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "poolId",
        type: "uint32",
      },
    ],
    name: "getAccountPositionInfo",
    outputs: [
      {
        internalType: "int256",
        name: "balance",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "netTraderPosition",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "sumALastX128",
        type: "int256",
      },
      {
        components: [
          {
            internalType: "int24",
            name: "tickLower",
            type: "int24",
          },
          {
            internalType: "int24",
            name: "tickUpper",
            type: "int24",
          },
        ],
        internalType: "struct IClearingHouseStructures.TickRange[]",
        name: "activeTickRanges",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "accountId",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "poolId",
        type: "uint32",
      },
    ],
    name: "getAccountTokenPositionInfo",
    outputs: [
      {
        internalType: "int256",
        name: "balance",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "netTraderPosition",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "sumALastX128",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "collateralId",
        type: "uint32",
      },
    ],
    name: "getCollateralInfo",
    outputs: [
      {
        components: [
          {
            internalType: "contract IERC20",
            name: "token",
            type: "address",
          },
          {
            components: [
              {
                internalType: "contract IOracle",
                name: "oracle",
                type: "address",
              },
              {
                internalType: "uint32",
                name: "twapDuration",
                type: "uint32",
              },
              {
                internalType: "bool",
                name: "isAllowedForDeposit",
                type: "bool",
              },
            ],
            internalType: "struct IClearingHouseStructures.CollateralSettings",
            name: "settings",
            type: "tuple",
          },
        ],
        internalType: "struct IClearingHouseStructures.Collateral",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "poolId",
        type: "uint32",
      },
    ],
    name: "getPoolInfo",
    outputs: [
      {
        components: [
          {
            internalType: "contract IVToken",
            name: "vToken",
            type: "address",
          },
          {
            internalType: "contract IUniswapV3Pool",
            name: "vPool",
            type: "address",
          },
          {
            internalType: "contract IVPoolWrapper",
            name: "vPoolWrapper",
            type: "address",
          },
          {
            components: [
              {
                internalType: "uint16",
                name: "initialMarginRatioBps",
                type: "uint16",
              },
              {
                internalType: "uint16",
                name: "maintainanceMarginRatioBps",
                type: "uint16",
              },
              {
                internalType: "uint16",
                name: "maxVirtualPriceDeviationRatioBps",
                type: "uint16",
              },
              {
                internalType: "uint32",
                name: "twapDuration",
                type: "uint32",
              },
              {
                internalType: "bool",
                name: "isAllowedForTrade",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "isCrossMargined",
                type: "bool",
              },
              {
                internalType: "contract IOracle",
                name: "oracle",
                type: "address",
              },
            ],
            internalType: "struct IClearingHouseStructures.PoolSettings",
            name: "settings",
            type: "tuple",
          },
        ],
        internalType: "struct IClearingHouseStructures.Pool",
        name: "pool",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "poolId",
        type: "uint32",
      },
    ],
    name: "getPoolSettings",
    outputs: [
      {
        components: [
          {
            internalType: "uint16",
            name: "initialMarginRatioBps",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "maintainanceMarginRatioBps",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "maxVirtualPriceDeviationRatioBps",
            type: "uint16",
          },
          {
            internalType: "uint32",
            name: "twapDuration",
            type: "uint32",
          },
          {
            internalType: "bool",
            name: "isAllowedForTrade",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "isCrossMargined",
            type: "bool",
          },
          {
            internalType: "contract IOracle",
            name: "oracle",
            type: "address",
          },
        ],
        internalType: "struct IClearingHouseStructures.PoolSettings",
        name: "settings",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getProtocolInfo",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "settlementToken",
        type: "address",
      },
      {
        internalType: "contract IVQuote",
        name: "vQuote",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint16",
            name: "rangeLiquidationFeeFraction",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "tokenLiquidationFeeFraction",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "closeFactorMMThresholdBps",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "partialLiquidationCloseFactorBps",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "insuranceFundFeeShareBps",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "liquidationSlippageSqrtToleranceBps",
            type: "uint16",
          },
          {
            internalType: "uint64",
            name: "maxRangeLiquidationFees",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "minNotionalLiquidatable",
            type: "uint64",
          },
        ],
        internalType: "struct IClearingHouseStructures.LiquidationParams",
        name: "liquidationParams",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "minRequiredMargin",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "removeLimitOrderFee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minimumOrderNotional",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "poolId",
        type: "uint32",
      },
    ],
    name: "getTwapDuration",
    outputs: [
      {
        internalType: "uint32",
        name: "twapDuration",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "poolId",
        type: "uint32",
      },
    ],
    name: "getVPool",
    outputs: [
      {
        internalType: "contract IUniswapV3Pool",
        name: "vPool",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "poolId",
        type: "uint32",
      },
    ],
    name: "getVPoolAndTwapDuration",
    outputs: [
      {
        internalType: "contract IUniswapV3Pool",
        name: "vPool",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "twapDuration",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "poolId",
        type: "uint32",
      },
    ],
    name: "isPoolIdAvailable",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "";

type ClearingHouseLensConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ClearingHouseLensConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ClearingHouseLens__factory extends ContractFactory {
  constructor(...args: ClearingHouseLensConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    _clearingHouse: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ClearingHouseLens> {
    return super.deploy(
      _clearingHouse,
      overrides || {}
    ) as Promise<ClearingHouseLens>;
  }
  getDeployTransaction(
    _clearingHouse: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_clearingHouse, overrides || {});
  }
  attach(address: string): ClearingHouseLens {
    return super.attach(address) as ClearingHouseLens;
  }
  connect(signer: Signer): ClearingHouseLens__factory {
    return super.connect(signer) as ClearingHouseLens__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ClearingHouseLensInterface {
    return new utils.Interface(_abi) as ClearingHouseLensInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ClearingHouseLens {
    return new Contract(address, _abi, signerOrProvider) as ClearingHouseLens;
  }
}
