/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  LiquidityPoolAdjustCollateralTest,
  LiquidityPoolAdjustCollateralTestInterface,
} from "../LiquidityPoolAdjustCollateralTest";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_optionRegistry",
        type: "address",
      },
      {
        internalType: "address",
        name: "_usd",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "lpCollateralDifference",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "addToLpBalance",
        type: "bool",
      },
    ],
    name: "adjustCollateral",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_series",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "close",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "collateralAllocated",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "collateralAsset",
        type: "address",
      },
    ],
    name: "getBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "underlying",
        type: "address",
      },
      {
        internalType: "address",
        name: "strikeAsset",
        type: "address",
      },
      {
        internalType: "uint64",
        name: "expiration",
        type: "uint64",
      },
      {
        internalType: "bool",
        name: "isPut",
        type: "bool",
      },
      {
        internalType: "uint128",
        name: "strike",
        type: "uint128",
      },
      {
        internalType: "address",
        name: "collateral",
        type: "address",
      },
    ],
    name: "issue",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_series",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "collateralAmount",
        type: "uint256",
      },
    ],
    name: "open",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "setCollateralAllocated",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_series",
        type: "address",
      },
    ],
    name: "settle",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610a43380380610a4383398101604081905261002f91610165565b600080546001600160a01b03199081166001600160a01b0385811691821790935560018054909216928416928317909155610078919060001961007f602090811b61052617901c565b5050610198565b600060405163095ea7b360e01b81526001600160a01b03841660048201528260248201526000806044836000895af191506100bb905081610102565b6100fc5760405162461bcd60e51b815260206004820152600e60248201526d1054141493d59157d1905253115160921b604482015260640160405180910390fd5b50505050565b60003d8261011457806000803e806000fd5b806020811461012c57801561013d5760009250610142565b816000803e60005115159250610142565b600192505b5050919050565b80516001600160a01b038116811461016057600080fd5b919050565b6000806040838503121561017857600080fd5b61018183610149565b915061018f60208401610149565b90509250929050565b61089c806101a76000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c806389a86ad31161005b57806389a86ad31461011e578063e49280cb14610148578063f1f32a881461015b578063f8b2cb4f1461016e57600080fd5b80631e4bc5571461008d5780633a5cd401146100a257806369955d6d146100be5780636a256b29146100e9575b600080fd5b6100a061009b366004610600565b610181565b005b6100ab60025481565b6040519081526020015b60405180910390f35b6100d16100cc366004610645565b6101dd565b6040516001600160a01b0390911681526020016100b5565b6100fc6100f73660046106e0565b6102e5565b60408051941515855260208501939093529183015260608201526080016100b5565b61013161012c366004610704565b61037a565b6040805192151583526020830191909152016100b5565b610131610156366004610739565b610413565b6100a0610169366004610765565b600255565b6100ab61017c3660046106e0565b6104a4565b80156101a45781600260008282546101999190610794565b909155506101d99050565b6001546000546101c1916001600160a01b03908116911684610526565b81600260008282546101d391906107ab565b90915550505b5050565b600080546040805160c08101825267ffffffffffffffff88811682526001600160801b03878116602084019081528915158486019081526001600160a01b038e8116606087019081528e8216608088019081528b831660a089019081529851635fb708cf60e01b81529751909616600488015292519093166024860152511515604485015251811660648401529051811660848301529151821660a4820152911690635fb708cf9060c401602060405180830381600087803b1580156102a257600080fd5b505af11580156102b6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102da91906107c3565b979650505050505050565b60008054604051636a256b2960e01b81526001600160a01b03848116600483015283928392839290911690636a256b2990602401608060405180830381600087803b15801561033357600080fd5b505af1158015610347573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061036b91906107e0565b93509350935093509193509193565b600080546040516389a86ad360e01b81526001600160a01b0386811660048301526024820186905260448201859052839216906389a86ad3906064016040805180830381600087803b1580156103cf57600080fd5b505af11580156103e3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610407919061081f565b91509150935093915050565b6000805460405163e49280cb60e01b81526001600160a01b038581166004830152602482018590528392169063e49280cb906044016040805180830381600087803b15801561046157600080fd5b505af1158015610475573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610499919061081f565b915091509250929050565b6001546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a082319060240160206040518083038186803b1580156104e857600080fd5b505afa1580156104fc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610520919061084d565b92915050565b600060405163095ea7b360e01b81526001600160a01b03841660048201528260248201526000806044836000895af1915050610561816105a8565b6105a25760405162461bcd60e51b815260206004820152600e60248201526d1054141493d59157d1905253115160921b604482015260640160405180910390fd5b50505050565b60003d826105ba57806000803e806000fd5b80602081146105d25780156105e357600092506105e8565b816000803e600051151592506105e8565b600192505b5050919050565b80151581146105fd57600080fd5b50565b6000806040838503121561061357600080fd5b823591506020830135610625816105ef565b809150509250929050565b6001600160a01b03811681146105fd57600080fd5b60008060008060008060c0878903121561065e57600080fd5b863561066981610630565b9550602087013561067981610630565b9450604087013567ffffffffffffffff8116811461069657600080fd5b935060608701356106a6816105ef565b925060808701356001600160801b03811681146106c257600080fd5b915060a08701356106d281610630565b809150509295509295509295565b6000602082840312156106f257600080fd5b81356106fd81610630565b9392505050565b60008060006060848603121561071957600080fd5b833561072481610630565b95602085013595506040909401359392505050565b6000806040838503121561074c57600080fd5b823561075781610630565b946020939093013593505050565b60006020828403121561077757600080fd5b5035919050565b634e487b7160e01b600052601160045260246000fd5b6000828210156107a6576107a661077e565b500390565b600082198211156107be576107be61077e565b500190565b6000602082840312156107d557600080fd5b81516106fd81610630565b600080600080608085870312156107f657600080fd5b8451610801816105ef565b60208601516040870151606090970151919890975090945092505050565b6000806040838503121561083257600080fd5b825161083d816105ef565b6020939093015192949293505050565b60006020828403121561085f57600080fd5b505191905056fea26469706673582212207949b1b0ec81359c639a5cb5f5ce821c7e969ffe260f9687aa225be151165b6464736f6c63430008090033";

type LiquidityPoolAdjustCollateralTestConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LiquidityPoolAdjustCollateralTestConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class LiquidityPoolAdjustCollateralTest__factory extends ContractFactory {
  constructor(...args: LiquidityPoolAdjustCollateralTestConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    _optionRegistry: string,
    _usd: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<LiquidityPoolAdjustCollateralTest> {
    return super.deploy(
      _optionRegistry,
      _usd,
      overrides || {}
    ) as Promise<LiquidityPoolAdjustCollateralTest>;
  }
  getDeployTransaction(
    _optionRegistry: string,
    _usd: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_optionRegistry, _usd, overrides || {});
  }
  attach(address: string): LiquidityPoolAdjustCollateralTest {
    return super.attach(address) as LiquidityPoolAdjustCollateralTest;
  }
  connect(signer: Signer): LiquidityPoolAdjustCollateralTest__factory {
    return super.connect(signer) as LiquidityPoolAdjustCollateralTest__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LiquidityPoolAdjustCollateralTestInterface {
    return new utils.Interface(
      _abi
    ) as LiquidityPoolAdjustCollateralTestInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): LiquidityPoolAdjustCollateralTest {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as LiquidityPoolAdjustCollateralTest;
  }
}
