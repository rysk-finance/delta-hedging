/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Manager, ManagerInterface } from "../Manager";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_authority",
        type: "address",
      },
      {
        internalType: "address",
        name: "_liquidityPool",
        type: "address",
      },
      {
        internalType: "address",
        name: "_optionHandler",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ExceedsDeltaLimit",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "NotKeeper",
    type: "error",
  },
  {
    inputs: [],
    name: "NotProxyManager",
    type: "error",
  },
  {
    inputs: [],
    name: "PRBMathSD59x18__AbsInputTooSmall",
    type: "error",
  },
  {
    inputs: [],
    name: "UNAUTHORIZED",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "contract IAuthority",
        name: "authority",
        type: "address",
      },
    ],
    name: "AuthorityUpdated",
    type: "event",
  },
  {
    inputs: [],
    name: "authority",
    outputs: [
      {
        internalType: "contract IAuthority",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint64",
            name: "expiration",
            type: "uint64",
          },
          {
            internalType: "uint128",
            name: "strike",
            type: "uint128",
          },
          {
            internalType: "bool",
            name: "isPut",
            type: "bool",
          },
          {
            internalType: "address",
            name: "underlying",
            type: "address",
          },
          {
            internalType: "address",
            name: "strikeAsset",
            type: "address",
          },
          {
            internalType: "address",
            name: "collateral",
            type: "address",
          },
        ],
        internalType: "struct Types.OptionSeries",
        name: "_optionSeries",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_orderExpiry",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_buyerAddress",
        type: "address",
      },
      {
        internalType: "bool",
        name: "_isBuyBack",
        type: "bool",
      },
      {
        internalType: "uint256[2]",
        name: "_spotMovementRange",
        type: "uint256[2]",
      },
    ],
    name: "createOrder",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint64",
            name: "expiration",
            type: "uint64",
          },
          {
            internalType: "uint128",
            name: "strike",
            type: "uint128",
          },
          {
            internalType: "bool",
            name: "isPut",
            type: "bool",
          },
          {
            internalType: "address",
            name: "underlying",
            type: "address",
          },
          {
            internalType: "address",
            name: "strikeAsset",
            type: "address",
          },
          {
            internalType: "address",
            name: "collateral",
            type: "address",
          },
        ],
        internalType: "struct Types.OptionSeries",
        name: "_optionSeriesCall",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint64",
            name: "expiration",
            type: "uint64",
          },
          {
            internalType: "uint128",
            name: "strike",
            type: "uint128",
          },
          {
            internalType: "bool",
            name: "isPut",
            type: "bool",
          },
          {
            internalType: "address",
            name: "underlying",
            type: "address",
          },
          {
            internalType: "address",
            name: "strikeAsset",
            type: "address",
          },
          {
            internalType: "address",
            name: "collateral",
            type: "address",
          },
        ],
        internalType: "struct Types.OptionSeries",
        name: "_optionSeriesPut",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "_amountCall",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amountPut",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_priceCall",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_pricePut",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_orderExpiry",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_buyerAddress",
        type: "address",
      },
      {
        internalType: "uint256[2]",
        name: "_callSpotMovementRange",
        type: "uint256[2]",
      },
      {
        internalType: "uint256[2]",
        name: "_putSpotMovementRange",
        type: "uint256[2]",
      },
    ],
    name: "createStrangle",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "deltaLimit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "keeper",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "liquidityPool",
    outputs: [
      {
        internalType: "contract ILiquidityPool",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "optionHandler",
    outputs: [
      {
        internalType: "contract IAlphaOptionHandler",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proxyManager",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pullManager",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "delta",
        type: "int256",
      },
      {
        internalType: "uint256",
        name: "reactorIndex",
        type: "uint256",
      },
    ],
    name: "rebalancePortfolioDelta",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IAuthority",
        name: "_newAuthority",
        type: "address",
      },
    ],
    name: "setAuthority",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "_delta",
        type: "uint256[]",
      },
      {
        internalType: "address[]",
        name: "_keeper",
        type: "address[]",
      },
    ],
    name: "setDeltaLimit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_keeper",
        type: "address",
      },
      {
        internalType: "bool",
        name: "_auth",
        type: "bool",
      },
    ],
    name: "setKeeper",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_optionHandler",
        type: "address",
      },
    ],
    name: "setOptionHandler",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_proxyManager",
        type: "address",
      },
    ],
    name: "setProxyManager",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "";

type ManagerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ManagerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Manager__factory extends ContractFactory {
  constructor(...args: ManagerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "Manager";
  }

  deploy(
    _authority: string,
    _liquidityPool: string,
    _optionHandler: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Manager> {
    return super.deploy(
      _authority,
      _liquidityPool,
      _optionHandler,
      overrides || {}
    ) as Promise<Manager>;
  }
  getDeployTransaction(
    _authority: string,
    _liquidityPool: string,
    _optionHandler: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _authority,
      _liquidityPool,
      _optionHandler,
      overrides || {}
    );
  }
  attach(address: string): Manager {
    return super.attach(address) as Manager;
  }
  connect(signer: Signer): Manager__factory {
    return super.connect(signer) as Manager__factory;
  }
  static readonly contractName: "Manager";
  public readonly contractName: "Manager";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ManagerInterface {
    return new utils.Interface(_abi) as ManagerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Manager {
    return new Contract(address, _abi, signerOrProvider) as Manager;
  }
}
