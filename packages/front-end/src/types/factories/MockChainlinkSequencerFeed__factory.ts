/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  MockChainlinkSequencerFeed,
  MockChainlinkSequencerFeedInterface,
} from "../MockChainlinkSequencerFeed";

const _abi = [
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "latestRoundData",
    outputs: [
      {
        internalType: "uint80",
        name: "",
        type: "uint80",
      },
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint80",
        name: "",
        type: "uint80",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "_answer",
        type: "int256",
      },
    ],
    name: "setAnswer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_startedAt",
        type: "uint256",
      },
    ],
    name: "setStartedAt",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052600860005534801561001557600080fd5b50610105806100256000396000f3fe6080604052348015600f57600080fd5b506004361060465760003560e01c8063313ce56714604b57806399213cd8146066578063dab03458146078578063feaf968c146088575b600080fd5b605360005481565b6040519081526020015b60405180910390f35b6076607136600460b7565b600155565b005b6076608336600460b7565b600255565b6001805460025460408051848152602081019390935282015260608101829052608081019190915260a001605d565b60006020828403121560c857600080fd5b503591905056fea2646970667358221220c0cf5f12643d302933d8efb5f245a36cbdad94e7883965cb235c867eaeebba3a64736f6c63430008090033";

type MockChainlinkSequencerFeedConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockChainlinkSequencerFeedConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockChainlinkSequencerFeed__factory extends ContractFactory {
  constructor(...args: MockChainlinkSequencerFeedConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "MockChainlinkSequencerFeed";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MockChainlinkSequencerFeed> {
    return super.deploy(overrides || {}) as Promise<MockChainlinkSequencerFeed>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): MockChainlinkSequencerFeed {
    return super.attach(address) as MockChainlinkSequencerFeed;
  }
  connect(signer: Signer): MockChainlinkSequencerFeed__factory {
    return super.connect(signer) as MockChainlinkSequencerFeed__factory;
  }
  static readonly contractName: "MockChainlinkSequencerFeed";
  public readonly contractName: "MockChainlinkSequencerFeed";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockChainlinkSequencerFeedInterface {
    return new utils.Interface(_abi) as MockChainlinkSequencerFeedInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockChainlinkSequencerFeed {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as MockChainlinkSequencerFeed;
  }
}
