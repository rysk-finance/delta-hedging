/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  OptionsCompute,
  OptionsComputeInterface,
} from "../OptionsCompute";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "prod1",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "denominator",
        type: "uint256",
      },
    ],
    name: "PRBMath__MulDivOverflow",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "priceDelta",
        type: "uint256",
      },
    ],
    name: "PriceDeltaExceedsThreshold",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "timeDelta",
        type: "uint256",
      },
    ],
    name: "TimeDeltaExceedsThreshold",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "spotPrice",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "int256",
            name: "delta",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "gamma",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "vega",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "theta",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "callPutsValue",
            type: "int256",
          },
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "spotPrice",
            type: "uint256",
          },
        ],
        internalType: "struct Types.PortfolioValues",
        name: "portfolioValues",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "maxTimeDeviationThreshold",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxPriceDeviationThreshold",
        type: "uint256",
      },
    ],
    name: "validatePortfolioValues",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x61031f61003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100355760003560e01c806348aec70b1461003a575b600080fd5b61004d6100483660046101e9565b61004f565b005b60008360a001514261006191906102ae565b90508281111561008c5760405163d225a0e560e01b8152600481018290526024015b60405180910390fd5b600061009c868660c001516100ca565b9050828111156100c25760405163024bd64960e51b815260048101829052602401610083565b505050505050565b6000818311156100ef576100e8826100e281866102ae565b90610106565b9050610100565b6100fd826100e285826102ae565b90505b92915050565b60006100fd83670de0b6b3a764000084600080806000198587098587029250828110838203039150508060000361015057838281610146576101466102d3565b04925050506101e2565b83811061017a57604051631dcf306360e21b81526004810182905260248101859052604401610083565b600084868809851960019081018716968790049682860381900495909211909303600082900391909104909201919091029190911760038402600290811880860282030280860282030280860282030280860282030280860282030280860290910302029150505b9392505050565b60008060008084860361014081121561020157600080fd5b8535945060e0601f198201121561021757600080fd5b5060405160e0810181811067ffffffffffffffff8211171561024957634e487b7160e01b600052604160045260246000fd5b80604052506020860135815260408601356020820152606086013560408201526080860135606082015260a0860135608082015260c086013560a082015260e086013560c0820152809350506101008501359150610120850135905092959194509250565b6000828210156102ce57634e487b7160e01b600052601160045260246000fd5b500390565b634e487b7160e01b600052601260045260246000fdfea2646970667358221220910de8f48f21ef5e19f6ea25894e423efe9e17ff27a8c8a90e82a1ab21b7c15264736f6c634300080e0033";

type OptionsComputeConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: OptionsComputeConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class OptionsCompute__factory extends ContractFactory {
  constructor(...args: OptionsComputeConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<OptionsCompute> {
    return super.deploy(overrides || {}) as Promise<OptionsCompute>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): OptionsCompute {
    return super.attach(address) as OptionsCompute;
  }
  connect(signer: Signer): OptionsCompute__factory {
    return super.connect(signer) as OptionsCompute__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OptionsComputeInterface {
    return new utils.Interface(_abi) as OptionsComputeInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): OptionsCompute {
    return new Contract(address, _abi, signerOrProvider) as OptionsCompute;
  }
}
