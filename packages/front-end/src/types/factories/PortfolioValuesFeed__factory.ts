/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  Overrides,
  BytesLike,
  BigNumberish,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  PortfolioValuesFeed,
  PortfolioValuesFeedInterface,
} from "../PortfolioValuesFeed";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_oracle",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "_jobId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "_fee",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_link",
        type: "address",
      },
      {
        internalType: "address",
        name: "_authority",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "NotKeeper",
    type: "error",
  },
  {
    inputs: [],
    name: "UNAUTHORIZED",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "contract IAuthority",
        name: "authority",
        type: "address",
      },
    ],
    name: "AuthorityUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
    ],
    name: "ChainlinkCancelled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
    ],
    name: "ChainlinkFulfilled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
    ],
    name: "ChainlinkRequested",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "underlying",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "strike",
        type: "address",
      },
      {
        indexed: false,
        internalType: "int256",
        name: "delta",
        type: "int256",
      },
      {
        indexed: false,
        internalType: "int256",
        name: "gamma",
        type: "int256",
      },
      {
        indexed: false,
        internalType: "int256",
        name: "vega",
        type: "int256",
      },
      {
        indexed: false,
        internalType: "int256",
        name: "theta",
        type: "int256",
      },
      {
        indexed: false,
        internalType: "int256",
        name: "callPutsValue",
        type: "int256",
      },
    ],
    name: "DataFullfilled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "stringVersion",
        type: "string",
      },
    ],
    name: "SetAddressStringMapping",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "liquidityPool",
        type: "address",
      },
    ],
    name: "SetLiquidityPool",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "oracle",
        type: "address",
      },
    ],
    name: "SetOracle",
    type: "event",
  },
  {
    inputs: [],
    name: "authority",
    outputs: [
      {
        internalType: "contract IAuthority",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_requestId",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "_underlying",
        type: "address",
      },
      {
        internalType: "address",
        name: "_strike",
        type: "address",
      },
      {
        internalType: "int256",
        name: "_delta",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "_gamma",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "_vega",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "_theta",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "_callPutsValue",
        type: "int256",
      },
      {
        internalType: "uint256",
        name: "_spotPrice",
        type: "uint256",
      },
    ],
    name: "fulfill",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "underlying",
        type: "address",
      },
      {
        internalType: "address",
        name: "strike",
        type: "address",
      },
    ],
    name: "getPortfolioValues",
    outputs: [
      {
        components: [
          {
            internalType: "int256",
            name: "delta",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "gamma",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "vega",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "theta",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "callPutsValue",
            type: "int256",
          },
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "spotPrice",
            type: "uint256",
          },
        ],
        internalType: "struct Types.PortfolioValues",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "keeper",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "link",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "liquidityPool",
    outputs: [
      {
        internalType: "contract ILiquidityPool",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "oracle",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_underlying",
        type: "address",
      },
      {
        internalType: "address",
        name: "_strike",
        type: "address",
      },
    ],
    name: "requestPortfolioData",
    outputs: [
      {
        internalType: "bytes32",
        name: "requestId",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_asset",
        type: "address",
      },
      {
        internalType: "string",
        name: "_stringVersion",
        type: "string",
      },
    ],
    name: "setAddressStringMapping",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IAuthority",
        name: "_newAuthority",
        type: "address",
      },
    ],
    name: "setAuthority",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_keeper",
        type: "address",
      },
      {
        internalType: "bool",
        name: "_auth",
        type: "bool",
      },
    ],
    name: "setKeeper",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_link",
        type: "address",
      },
    ],
    name: "setLink",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_liquidityPool",
        type: "address",
      },
    ],
    name: "setLiquidityPool",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_oracle",
        type: "address",
      },
    ],
    name: "setOracle",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "stringedAddresses",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_target",
        type: "address",
      },
    ],
    name: "withdrawLink",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60c060405260016005553480156200001657600080fd5b5060405162001dde38038062001dde8339810160408190526200003991620001c5565b600080546001600160a01b0319166001600160a01b03831690811790915560405190815281907f2f658b440c35314f52658ea8a740e05b284cdc84dc9ae01e891f21b8933e7cad9060200160405180910390a1506001600160a01b038216620000ac57620000a662000107565b620000c8565b600380546001600160a01b0319166001600160a01b0384161790555b50600980546001600160a01b039586166001600160a01b03199182161790915560809390935260a0919091526008805491909316911617905562000248565b620001a673c89bd4e1632d3a43cb03aaad5262cbe4038bc5716001600160a01b03166338cc48316040518163ffffffff1660e01b8152600401602060405180830381865afa1580156200015e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000184919062000223565b600380546001600160a01b0319166001600160a01b0392909216919091179055565b565b80516001600160a01b0381168114620001c057600080fd5b919050565b600080600080600060a08688031215620001de57600080fd5b620001e986620001a8565b945060208601519350604086015192506200020760608701620001a8565b91506200021760808701620001a8565b90509295509295909350565b6000602082840312156200023657600080fd5b6200024182620001a8565b9392505050565b60805160a051611b706200026e60003960006105c8015260006103530152611b706000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c80637a9e5e4b1161009757806394547fcc1161006657806394547fcc14610279578063bf7e214f1461028c578063d1b9e8531461029f578063e8cf8608146102b257600080fd5b80637a9e5e4b1461022d5780637adbf973146102405780637dc0d1d01461025357806380a624f51461026657600080fd5b80633926f28e116100d35780633926f28e1461017e57806341ea27ca1461019e5780634e133d4d146101b1578063665a11ca1461021a57600080fd5b8063018770201461010557806305c253901461011a57806307e6e65d146101405780631c4695f414610153575b600080fd5b6101186101133660046115fb565b6102e5565b005b61012d610128366004611618565b610342565b6040519081526020015b60405180910390f35b61011861014e366004611651565b6105f9565b600854610166906001600160a01b031681565b6040516001600160a01b039091168152602001610137565b61019161018c3660046115fb565b610856565b6040516101379190611716565b6101186101ac366004611729565b6108f0565b6101c46101bf366004611618565b610974565b6040516101379190600060e082019050825182526020830151602083015260408301516040830152606083015160608301526080830151608083015260a083015160a083015260c083015160c083015292915050565b600a54610166906001600160a01b031681565b61011861023b3660046115fb565b610a2d565b61011861024e3660046115fb565b610a83565b600954610166906001600160a01b031681565b610118610274366004611764565b610ad9565b6101186102873660046115fb565b610b48565b600054610166906001600160a01b031681565b6101186102ad366004611836565b610b72565b6102d56102c03660046115fb565b600c6020526000908152604090205460ff1681565b6040519015158152602001610137565b6102ed610ba5565b600a80546001600160a01b0319166001600160a01b0383169081179091556040519081527fe926a1c76b7cba5ee912418709df854ad32aab2035491b1d0ce9c0117735452f906020015b60405180910390a150565b600061034c610c4d565b60006103807f0000000000000000000000000000000000000000000000000000000000000000306307e6e65d60e01b610da3565b6001600160a01b0385166000908152600b60205260408120805492935090916103a890611864565b80601f01602080910402602001604051908101604052809291908181526020018280546103d490611864565b80156104215780601f106103f657610100808354040283529160200191610421565b820191906000526020600020905b81548152906001019060200180831161040457829003601f168201915b5050506001600160a01b0387166000908152600b60205260408120805494955090939092506104509150611864565b80601f016020809104026020016040519081016040528092919081815260200182805461047c90611864565b80156104c95780601f1061049e576101008083540402835291602001916104c9565b820191906000526020600020905b8154815290600101906020018083116104ac57829003601f168201915b5050505050905061052d60405180604001604052806008815260200167195b991c1bda5b9d60c21b8152506040518060400160405280601081526020016f706f7274666f6c696f2d76616c75657360801b81525085610dc89092919063ffffffff16565b60408051808201909152600a815269756e6465726c79696e6760b01b602082015261055a90849084610dc8565b604080518082019091526006815265737472696b6560d01b602082015261058390849083610dc8565b60408051808201909152600581526474696d657360d81b6020820152670de0b6b3a7640000906105b590859083610de6565b6009546105ec906001600160a01b0316857f0000000000000000000000000000000000000000000000000000000000000000610e04565b9450505050505b92915050565b60008981526006602052604090205489906001600160a01b031633146106775760405162461bcd60e51b815260206004820152602860248201527f536f75726365206d75737420626520746865206f7261636c65206f6620746865604482015267081c995c5d595cdd60c21b60648201526084015b60405180910390fd5b60008181526006602052604080822080546001600160a01b03191690555182917f7cc135e0cebb02c3480ae5d74d377283180a2601f8f644edf7987b009316c63a91a260006040518060e0016040528089815260200188815260200187815260200186815260200185815260200142815260200184815250905080600760008c6001600160a01b03166001600160a01b0316815260200190815260200160002060008b6001600160a01b03166001600160a01b03168152602001908152602001600020600082015181600001556020820151816001015560408201518160020155606082015181600301556080820151816004015560a0820151816005015560c08201518160060155905050600a60009054906101000a90046001600160a01b03166001600160a01b0316634da2df786040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156107d357600080fd5b505af11580156107e7573d6000803e3d6000fd5b5050604080518b8152602081018b905290810189905260608101889052608081018790526001600160a01b03808d1693508d1691507fec5da05d5d82ced9f6369cfcc2f9d0cad94c0256c7ac3a81d6681bd57b2c33749060a00160405180910390a35050505050505050505050565b600b602052600090815260409020805461086f90611864565b80601f016020809104026020016040519081016040528092919081815260200182805461089b90611864565b80156108e85780601f106108bd576101008083540402835291602001916108e8565b820191906000526020600020905b8154815290600101906020018083116108cb57829003601f168201915b505050505081565b6108f8610ba5565b60085460405163a9059cbb60e01b81526001600160a01b038381166004830152602482018590529091169063a9059cbb906044016020604051808303816000875af115801561094b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061096f9190611898565b505050565b6109b46040518060e00160405280600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b506001600160a01b039182166000908152600760209081526040808320939094168252918252829020825160e081018452815481526001820154928101929092526002810154928201929092526003820154606082015260048201546080820152600582015460a082015260069091015460c082015290565b610a35610ba5565b600080546001600160a01b0319166001600160a01b0383169081179091556040519081527f2f658b440c35314f52658ea8a740e05b284cdc84dc9ae01e891f21b8933e7cad90602001610337565b610a8b610ba5565b600980546001600160a01b0319166001600160a01b0383169081179091556040519081527fd3b5d1e0ffaeff528910f3663f0adace7694ab8241d58e17a91351ced2e0803190602001610337565b610ae1610ba5565b6001600160a01b0382166000908152600b602090815260409091208251610b0a9284019061150f565b507fb78094c7ba0f335356d4fc380c69227a459c613cac98e1e758770ba486a8e40a8282604051610b3c9291906118b5565b60405180910390a15050565b610b50610ba5565b600880546001600160a01b0319166001600160a01b0392909216919091179055565b610b7a610ba5565b6001600160a01b03919091166000908152600c60205260409020805460ff1916911515919091179055565b60008054906101000a90046001600160a01b03166001600160a01b0316630c340a246040518163ffffffff1660e01b8152600401602060405180830381865afa158015610bf6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c1a91906118d9565b6001600160a01b0316336001600160a01b031614610c4b5760405163075fd2b160e01b815260040160405180910390fd5b565b336000908152600c602052604090205460ff16158015610cf3575060008054906101000a90046001600160a01b03166001600160a01b0316630c340a246040518163ffffffff1660e01b8152600401602060405180830381865afa158015610cb9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cdd91906118d9565b6001600160a01b0316336001600160a01b031614155b8015610d85575060008054906101000a90046001600160a01b03166001600160a01b031663481c6a756040518163ffffffff1660e01b8152600401602060405180830381865afa158015610d4b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d6f91906118d9565b6001600160a01b0316336001600160a01b031614155b15610c4b57604051631ea2564f60e31b815260040160405180910390fd5b610dab611593565b610db3611593565b610dbf81868686610e97565b95945050505050565b6080830151610dd79083610edd565b608083015161096f9082610edd565b6080830151610df59083610edd565b608083015161096f9082610ef4565b600554600090610e1581600161190c565b600555835160408086015160808701515191516000936320214ca360e11b93610e4d9386938493923092918a91600191602401611924565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909316929092179091529050610e8d86838684610f58565b9695505050505050565b610e9f611593565b610eaf85608001516101006110b6565b50508284526001600160a01b03821660208501526001600160e01b031981166040850152835b949350505050565b610eea826003835161111b565b61096f8282611230565b67ffffffffffffffff19811215610f1357610f0f828261125e565b5050565b67ffffffffffffffff811315610f2d57610f0f82826112a0565b60008112610f4157610f0f8260008361111b565b610f0f826001610f538460001961198c565b61111b565b6040516bffffffffffffffffffffffff193060601b1660208201526034810184905260009060540160408051808303601f1901815282825280516020918201206000818152600690925291812080546001600160a01b0319166001600160a01b038a1617905590925082917fb5e6e01e79f91267dc17b4e6314d5d4d03593d2ceee0fbb452b750bd70ea5af99190a2600354604051630200057560e51b81526001600160a01b0390911690634000aea09061101b908890879087906004016119cb565b6020604051808303816000875af115801561103a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061105e9190611898565b610ed55760405162461bcd60e51b815260206004820152602360248201527f756e61626c6520746f207472616e73666572416e6443616c6c20746f206f7261604482015262636c6560e81b606482015260840161066e565b6040805180820190915260608152600060208201526110d66020836119f2565b156110fe576110e66020836119f2565b6110f1906020611a14565b6110fb908361190c565b91505b506020828101829052604080518085526000815290920101905290565b60178167ffffffffffffffff1611611146576111408360e0600585901b1683176112c3565b50505050565b60ff8167ffffffffffffffff16116111845761116d836018611fe0600586901b16176112c3565b506111408367ffffffffffffffff831660016112e8565b61ffff8167ffffffffffffffff16116111c3576111ac836019611fe0600586901b16176112c3565b506111408367ffffffffffffffff831660026112e8565b63ffffffff8167ffffffffffffffff1611611204576111ed83601a611fe0600586901b16176112c3565b506111408367ffffffffffffffff831660046112e8565b61121983601b611fe0600586901b16176112c3565b506111408367ffffffffffffffff831660086112e8565b6040805180820190915260608152600060208201526112578384600001515184855161130e565b9392505050565b6112698260c36112c3565b50610f0f8261127a8360001961198c565b60405160200161128c91815260200190565b6040516020818303038152906040526113f8565b6112ab8260c26112c3565b50610f0f828260405160200161128c91815260200190565b6040805180820190915260608152600060208201526112578384600001515184611405565b604080518082019091526060815260006020820152610ed5848560000151518585611460565b604080518082019091526060815260006020820152825182111561133157600080fd5b6020850151611340838661190c565b111561137357611373856113638760200151878661135e919061190c565b6114e1565b61136e906002611a2b565b6114f8565b6000808651805187602083010193508088870111156113925787860182525b505050602084015b602084106113d257805182526113b160208361190c565b91506113be60208261190c565b90506113cb602085611a14565b935061139a565b51815160001960208690036101000a019081169019919091161790525083949350505050565b610eea826002835161111b565b6040805180820190915260608152600060208201528360200151831061143a5761143a848560200151600261136e9190611a2b565b8351805160208583010184815350808503611456576001810182525b5093949350505050565b6040805180820190915260608152600060208201526020850151611484858461190c565b11156114985761149885611363868561190c565b600060016114a884610100611b2e565b6114b29190611a14565b90508551838682010185831982511617815250805184870111156114d65783860181525b509495945050505050565b6000818311156114f25750816105f3565b50919050565b815161150483836110b6565b506111408382611230565b82805461151b90611864565b90600052602060002090601f01602090048101928261153d5760008555611583565b82601f1061155657805160ff1916838001178555611583565b82800160010185558215611583579182015b82811115611583578251825591602001919060010190611568565b5061158f9291506115ce565b5090565b6040805160a0810182526000808252602080830182905282840182905260608084018390528451808601909552845283015290608082015290565b5b8082111561158f57600081556001016115cf565b6001600160a01b03811681146115f857600080fd5b50565b60006020828403121561160d57600080fd5b8135611257816115e3565b6000806040838503121561162b57600080fd5b8235611636816115e3565b91506020830135611646816115e3565b809150509250929050565b60008060008060008060008060006101208a8c03121561167057600080fd5b8935985060208a0135611682816115e3565b975060408a0135611692816115e3565b989b979a5097986060810135985060808101359760a0820135975060c0820135965060e08201359550610100909101359350915050565b6000815180845260005b818110156116ef576020818501810151868301820152016116d3565b81811115611701576000602083870101525b50601f01601f19169290920160200192915050565b60208152600061125760208301846116c9565b6000806040838503121561173c57600080fd5b823591506020830135611646816115e3565b634e487b7160e01b600052604160045260246000fd5b6000806040838503121561177757600080fd5b8235611782816115e3565b9150602083013567ffffffffffffffff8082111561179f57600080fd5b818501915085601f8301126117b357600080fd5b8135818111156117c5576117c561174e565b604051601f8201601f19908116603f011681019083821181831017156117ed576117ed61174e565b8160405282815288602084870101111561180657600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b80151581146115f857600080fd5b6000806040838503121561184957600080fd5b8235611854816115e3565b9150602083013561164681611828565b600181811c9082168061187857607f821691505b6020821081036114f257634e487b7160e01b600052602260045260246000fd5b6000602082840312156118aa57600080fd5b815161125781611828565b6001600160a01b0383168152604060208201819052600090610ed5908301846116c9565b6000602082840312156118eb57600080fd5b8151611257816115e3565b634e487b7160e01b600052601160045260246000fd5b6000821982111561191f5761191f6118f6565b500190565b6001600160a01b0389811682526020820189905260408201889052861660608201526001600160e01b03198516608082015260a0810184905260c0810183905261010060e0820181905260009061197d838201856116c9565b9b9a5050505050505050505050565b60008083128015600160ff1b8501841216156119aa576119aa6118f6565b6001600160ff1b03840183138116156119c5576119c56118f6565b50500390565b60018060a01b0384168152826020820152606060408201526000610dbf60608301846116c9565b600082611a0f57634e487b7160e01b600052601260045260246000fd5b500690565b600082821015611a2657611a266118f6565b500390565b6000816000190483118215151615611a4557611a456118f6565b500290565b600181815b80851115611a85578160001904821115611a6b57611a6b6118f6565b80851615611a7857918102915b93841c9390800290611a4f565b509250929050565b600082611a9c575060016105f3565b81611aa9575060006105f3565b8160018114611abf5760028114611ac957611ae5565b60019150506105f3565b60ff841115611ada57611ada6118f6565b50506001821b6105f3565b5060208310610133831016604e8410600b8410161715611b08575081810a6105f3565b611b128383611a4a565b8060001904821115611b2657611b266118f6565b029392505050565b60006112578383611a8d56fea2646970667358221220eb8f525962feb6c19dce460a04bd48697df455f6a8e760e94fde467fa0b6d4f664736f6c634300080e0033";

type PortfolioValuesFeedConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PortfolioValuesFeedConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PortfolioValuesFeed__factory extends ContractFactory {
  constructor(...args: PortfolioValuesFeedConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    _oracle: string,
    _jobId: BytesLike,
    _fee: BigNumberish,
    _link: string,
    _authority: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<PortfolioValuesFeed> {
    return super.deploy(
      _oracle,
      _jobId,
      _fee,
      _link,
      _authority,
      overrides || {}
    ) as Promise<PortfolioValuesFeed>;
  }
  getDeployTransaction(
    _oracle: string,
    _jobId: BytesLike,
    _fee: BigNumberish,
    _link: string,
    _authority: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _oracle,
      _jobId,
      _fee,
      _link,
      _authority,
      overrides || {}
    );
  }
  attach(address: string): PortfolioValuesFeed {
    return super.attach(address) as PortfolioValuesFeed;
  }
  connect(signer: Signer): PortfolioValuesFeed__factory {
    return super.connect(signer) as PortfolioValuesFeed__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PortfolioValuesFeedInterface {
    return new utils.Interface(_abi) as PortfolioValuesFeedInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PortfolioValuesFeed {
    return new Contract(address, _abi, signerOrProvider) as PortfolioValuesFeed;
  }
}
