/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PriceFeed, PriceFeedInterface } from "../PriceFeed";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_authority",
        type: "address",
      },
      {
        internalType: "address",
        name: "_sequencerUptimeFeedAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "GracePeriodNotOver",
    type: "error",
  },
  {
    inputs: [],
    name: "SequencerDown",
    type: "error",
  },
  {
    inputs: [],
    name: "UNAUTHORIZED",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "contract IAuthority",
        name: "authority",
        type: "address",
      },
    ],
    name: "AuthorityUpdated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "underlying",
        type: "address",
      },
      {
        internalType: "address",
        name: "strike",
        type: "address",
      },
      {
        internalType: "address",
        name: "feed",
        type: "address",
      },
    ],
    name: "addPriceFeed",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "authority",
    outputs: [
      {
        internalType: "contract IAuthority",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "underlying",
        type: "address",
      },
      {
        internalType: "address",
        name: "strike",
        type: "address",
      },
    ],
    name: "getNormalizedRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "underlying",
        type: "address",
      },
      {
        internalType: "address",
        name: "strike",
        type: "address",
      },
    ],
    name: "getRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "priceFeeds",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "sequencerUptimeFeedAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IAuthority",
        name: "_newAuthority",
        type: "address",
      },
    ],
    name: "setAuthority",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_sequencerUptimeFeedAddress",
        type: "address",
      },
    ],
    name: "setSequencerUptimeFeedAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610cd7380380610cd783398101604081905261002f916100c5565b600080546001600160a01b0319166001600160a01b03841690811790915560405190815282907f2f658b440c35314f52658ea8a740e05b284cdc84dc9ae01e891f21b8933e7cad9060200160405180910390a150600280546001600160a01b0319166001600160a01b0392909216919091179055506100f8565b80516001600160a01b03811681146100c057600080fd5b919050565b600080604083850312156100d857600080fd5b6100e1836100a9565b91506100ef602084016100a9565b90509250929050565b610bd0806101076000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c80633a8c0fc31161005b5780633a8c0fc3146100ee5780637a9e5e4b14610119578063bf7e214f1461012c578063f90c69061461013f57600080fd5b806314738a6c1461008d5780631643b77d146100b35780631b10a949146100c8578063379b87ea146100db575b600080fd5b6100a061009b36600461083f565b610173565b6040519081526020015b60405180910390f35b6100c66100c1366004610878565b610427565b005b6100c66100d636600461089c565b610451565b6100a06100e936600461083f565b610496565b600254610101906001600160a01b031681565b6040516001600160a01b0390911681526020016100aa565b6100c6610127366004610878565b610652565b600054610101906001600160a01b031681565b61010161014d36600461083f565b60016020908152600092835260408084209091529082529020546001600160a01b031681565b6001600160a01b0380831660009081526001602090815260408083208585168452909152812054909116806101eb5760405162461bcd60e51b8152602060048201526019602482015278141c9a58d9481999595908191bd95cc81b9bdd08195e1a5cdd603a1b60448201526064015b60405180910390fd5b60008190506000816001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015610230573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061025491906108e7565b905061025e6106ae565b600080600080856001600160a01b031663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa1580156102a2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102c69190610926565b945094505093509350600083136102ef5760405162461bcd60e51b81526004016101e290610976565b816000036103345760405162461bcd60e51b8152602060048201526012602482015271524f554e445f4e4f545f434f4d504c45544560701b60448201526064016101e2565b610340610e10836109d2565b42111561035f5760405162461bcd60e51b81526004016101e2906109ea565b836001600160501b0316816001600160501b031610156103b55760405162461bcd60e51b815260206004820152601160248201527014d510531157d4149250d157d493d55391607a1b60448201526064016101e2565b600060ff8616601211156103f4576103ce866012610a0f565b90506103db81600a610b16565b6103e59085610b25565b98505050505050505050610421565b6103ff601287610a0f565b905061040c81600a610b16565b6104169085610b44565b985050505050505050505b92915050565b61042f61077f565b600280546001600160a01b0319166001600160a01b0392909216919091179055565b61045961077f565b6001600160a01b03928316600090815260016020908152604080832094861683529390529190912080546001600160a01b03191691909216179055565b6001600160a01b0380831660009081526001602090815260408083208585168452909152812054909116806105095760405162461bcd60e51b8152602060048201526019602482015278141c9a58d9481999595908191bd95cc81b9bdd08195e1a5cdd603a1b60448201526064016101e2565b806105126106ae565b600080600080846001600160a01b031663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610556573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061057a9190610926565b945094505093509350600083136105a35760405162461bcd60e51b81526004016101e290610976565b816000036105e85760405162461bcd60e51b8152602060048201526012602482015271524f554e445f4e4f545f434f4d504c45544560701b60448201526064016101e2565b6105f4610e10836109d2565b4211156106135760405162461bcd60e51b81526004016101e2906109ea565b836001600160501b0316816001600160501b031610156106455760405162461bcd60e51b81526004016101e2906109ea565b5090979650505050505050565b61065a61077f565b600080546001600160a01b0319166001600160a01b0383169081179091556040519081527f2f658b440c35314f52658ea8a740e05b284cdc84dc9ae01e891f21b8933e7cad9060200160405180910390a150565b60025460408051633fabe5a360e21b815290516001600160a01b03909216916000918291849163feaf968c9160048083019260a09291908290030181865afa1580156106fe573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107229190610926565b50509250925050816000146107495760405162032b3d60e81b815260040160405180910390fd5b60006107558242610b66565b905061070881116107795760405163d15f73b560e01b815260040160405180910390fd5b50505050565b60008054906101000a90046001600160a01b03166001600160a01b0316630c340a246040518163ffffffff1660e01b8152600401602060405180830381865afa1580156107d0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107f49190610b7d565b6001600160a01b0316336001600160a01b0316146108255760405163075fd2b160e01b815260040160405180910390fd5b565b6001600160a01b038116811461083c57600080fd5b50565b6000806040838503121561085257600080fd5b823561085d81610827565b9150602083013561086d81610827565b809150509250929050565b60006020828403121561088a57600080fd5b813561089581610827565b9392505050565b6000806000606084860312156108b157600080fd5b83356108bc81610827565b925060208401356108cc81610827565b915060408401356108dc81610827565b809150509250925092565b6000602082840312156108f957600080fd5b815160ff8116811461089557600080fd5b80516001600160501b038116811461092157600080fd5b919050565b600080600080600060a0868803121561093e57600080fd5b6109478661090a565b945060208601519350604086015192506060860151915061096a6080870161090a565b90509295509295909350565b60208082526026908201527f436861696e4c696e6b5072696365723a207072696365206973206c6f7765722060408201526507468616e20360d41b606082015260800190565b634e487b7160e01b600052601160045260246000fd5b600082198211156109e5576109e56109bc565b500190565b6020808252600b908201526a5354414c455f505249434560a81b604082015260600190565b600060ff821660ff841680821015610a2957610a296109bc565b90039392505050565b600181815b80851115610a6d578160001904821115610a5357610a536109bc565b80851615610a6057918102915b93841c9390800290610a37565b509250929050565b600082610a8457506001610421565b81610a9157506000610421565b8160018114610aa75760028114610ab157610acd565b6001915050610421565b60ff841115610ac257610ac26109bc565b50506001821b610421565b5060208310610133831016604e8410600b8410161715610af0575081810a610421565b610afa8383610a32565b8060001904821115610b0e57610b0e6109bc565b029392505050565b600061089560ff841683610a75565b6000816000190483118215151615610b3f57610b3f6109bc565b500290565b600082610b6157634e487b7160e01b600052601260045260246000fd5b500490565b600082821015610b7857610b786109bc565b500390565b600060208284031215610b8f57600080fd5b81516108958161082756fea2646970667358221220264288113a465acd57ccbcbafd247f2f8c421c02ba3a370cfdf8b58584d5da0964736f6c634300080e0033";

type PriceFeedConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PriceFeedConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PriceFeed__factory extends ContractFactory {
  constructor(...args: PriceFeedConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    _authority: string,
    _sequencerUptimeFeedAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<PriceFeed> {
    return super.deploy(
      _authority,
      _sequencerUptimeFeedAddress,
      overrides || {}
    ) as Promise<PriceFeed>;
  }
  getDeployTransaction(
    _authority: string,
    _sequencerUptimeFeedAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _authority,
      _sequencerUptimeFeedAddress,
      overrides || {}
    );
  }
  attach(address: string): PriceFeed {
    return super.attach(address) as PriceFeed;
  }
  connect(signer: Signer): PriceFeed__factory {
    return super.connect(signer) as PriceFeed__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PriceFeedInterface {
    return new utils.Interface(_abi) as PriceFeedInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PriceFeed {
    return new Contract(address, _abi, signerOrProvider) as PriceFeed;
  }
}
