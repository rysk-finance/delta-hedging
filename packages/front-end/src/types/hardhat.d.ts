/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { ethers } from "ethers";
import {
  FactoryOptions,
  HardhatEthersHelpers as HardhatEthersHelpersBase,
} from "@nomiclabs/hardhat-ethers/types";

import * as Contracts from ".";

declare module "hardhat/types/runtime" {
  interface HardhatEthersHelpers extends HardhatEthersHelpersBase {
    getContractFactory(
      name: "ChainlinkClient",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ChainlinkClient__factory>;
    getContractFactory(
      name: "ChainlinkRequestInterface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ChainlinkRequestInterface__factory>;
    getContractFactory(
      name: "ENSInterface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ENSInterface__factory>;
    getContractFactory(
      name: "LinkTokenInterface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.LinkTokenInterface__factory>;
    getContractFactory(
      name: "OperatorInterface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.OperatorInterface__factory>;
    getContractFactory(
      name: "OracleInterface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.OracleInterface__factory>;
    getContractFactory(
      name: "PointerInterface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PointerInterface__factory>;
    getContractFactory(
      name: "ENSResolver",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ENSResolver__factory>;
    getContractFactory(
      name: "Initializable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Initializable__factory>;
    getContractFactory(
      name: "PausableUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PausableUpgradeable__factory>;
    getContractFactory(
      name: "ERC20Upgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20Upgradeable__factory>;
    getContractFactory(
      name: "IERC20MetadataUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20MetadataUpgradeable__factory>;
    getContractFactory(
      name: "IERC20Upgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20Upgradeable__factory>;
    getContractFactory(
      name: "ContextUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ContextUpgradeable__factory>;
    getContractFactory(
      name: "AccessControl",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AccessControl__factory>;
    getContractFactory(
      name: "AccessControlEnumerable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AccessControlEnumerable__factory>;
    getContractFactory(
      name: "IAccessControl",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IAccessControl__factory>;
    getContractFactory(
      name: "IAccessControlEnumerable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IAccessControlEnumerable__factory>;
    getContractFactory(
      name: "Ownable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Ownable__factory>;
    getContractFactory(
      name: "IERC1822Proxiable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1822Proxiable__factory>;
    getContractFactory(
      name: "IBeacon",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IBeacon__factory>;
    getContractFactory(
      name: "ERC1967Proxy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1967Proxy__factory>;
    getContractFactory(
      name: "ERC1967Upgrade",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1967Upgrade__factory>;
    getContractFactory(
      name: "Proxy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Proxy__factory>;
    getContractFactory(
      name: "ProxyAdmin",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ProxyAdmin__factory>;
    getContractFactory(
      name: "TransparentUpgradeableProxy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TransparentUpgradeableProxy__factory>;
    getContractFactory(
      name: "Pausable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Pausable__factory>;
    getContractFactory(
      name: "ERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20__factory>;
    getContractFactory(
      name: "IERC20Permit",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20Permit__factory>;
    getContractFactory(
      name: "ERC20Burnable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20Burnable__factory>;
    getContractFactory(
      name: "ERC20Pausable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20Pausable__factory>;
    getContractFactory(
      name: "IERC20Metadata",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20Metadata__factory>;
    getContractFactory(
      name: "IERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20__factory>;
    getContractFactory(
      name: "ERC20PresetMinterPauser",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20PresetMinterPauser__factory>;
    getContractFactory(
      name: "ERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC165__factory>;
    getContractFactory(
      name: "IERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC165__factory>;
    getContractFactory(
      name: "IClearingHouseActions",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IClearingHouseActions__factory>;
    getContractFactory(
      name: "IClearingHouseCustomErrors",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IClearingHouseCustomErrors__factory>;
    getContractFactory(
      name: "IClearingHouseEvents",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IClearingHouseEvents__factory>;
    getContractFactory(
      name: "IClearingHouseOwnerActions",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IClearingHouseOwnerActions__factory>;
    getContractFactory(
      name: "IClearingHouseSystemActions",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IClearingHouseSystemActions__factory>;
    getContractFactory(
      name: "IClearingHouseView",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IClearingHouseView__factory>;
    getContractFactory(
      name: "IClearingHouse",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IClearingHouse__factory>;
    getContractFactory(
      name: "IExtsload",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IExtsload__factory>;
    getContractFactory(
      name: "IGovernable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IGovernable__factory>;
    getContractFactory(
      name: "IInsuranceFund",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IInsuranceFund__factory>;
    getContractFactory(
      name: "IOracle",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IOracle__factory>;
    getContractFactory(
      name: "IVPoolWrapper",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IVPoolWrapper__factory>;
    getContractFactory(
      name: "IVQuote",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IVQuote__factory>;
    getContractFactory(
      name: "IVToken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IVToken__factory>;
    getContractFactory(
      name: "ClearingHouseLens",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ClearingHouseLens__factory>;
    getContractFactory(
      name: "Account",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Account__factory>;
    getContractFactory(
      name: "Bisection",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Bisection__factory>;
    getContractFactory(
      name: "ArbSys",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ArbSys__factory>;
    getContractFactory(
      name: "CollateralDeposit",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CollateralDeposit__factory>;
    getContractFactory(
      name: "FundingPayment",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.FundingPayment__factory>;
    getContractFactory(
      name: "LiquidityPosition",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.LiquidityPosition__factory>;
    getContractFactory(
      name: "LiquidityPositionSet",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.LiquidityPositionSet__factory>;
    getContractFactory(
      name: "PriceMath",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PriceMath__factory>;
    getContractFactory(
      name: "SafeCast",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SafeCast__factory>;
    getContractFactory(
      name: "SimulateSwap",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SimulateSwap__factory>;
    getContractFactory(
      name: "Uint32L8ArrayLib",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Uint32L8ArrayLib__factory>;
    getContractFactory(
      name: "Uint48L5ArrayLib",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Uint48L5ArrayLib__factory>;
    getContractFactory(
      name: "UniswapV3PoolHelper",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.UniswapV3PoolHelper__factory>;
    getContractFactory(
      name: "VTokenPositionSet",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.VTokenPositionSet__factory>;
    getContractFactory(
      name: "SettlementTokenOracle",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SettlementTokenOracle__factory>;
    getContractFactory(
      name: "ClearingHouse",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ClearingHouse__factory>;
    getContractFactory(
      name: "ClearingHouseDeployer",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ClearingHouseDeployer__factory>;
    getContractFactory(
      name: "ClearingHouseStorage",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ClearingHouseStorage__factory>;
    getContractFactory(
      name: "ClearingHouseView",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ClearingHouseView__factory>;
    getContractFactory(
      name: "InsuranceFund",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.InsuranceFund__factory>;
    getContractFactory(
      name: "InsuranceFundDeployer",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.InsuranceFundDeployer__factory>;
    getContractFactory(
      name: "RageTradeFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.RageTradeFactory__factory>;
    getContractFactory(
      name: "VQuote",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.VQuote__factory>;
    getContractFactory(
      name: "VToken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.VToken__factory>;
    getContractFactory(
      name: "VPoolWrapper",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.VPoolWrapper__factory>;
    getContractFactory(
      name: "VPoolWrapperDeployer",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.VPoolWrapperDeployer__factory>;
    getContractFactory(
      name: "Extsload",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Extsload__factory>;
    getContractFactory(
      name: "Governable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Governable__factory>;
    getContractFactory(
      name: "Multicall",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Multicall__factory>;
    getContractFactory(
      name: "ProxyAdminDeployer",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ProxyAdminDeployer__factory>;
    getContractFactory(
      name: "IUniswapV3MintCallback",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IUniswapV3MintCallback__factory>;
    getContractFactory(
      name: "IUniswapV3SwapCallback",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IUniswapV3SwapCallback__factory>;
    getContractFactory(
      name: "IUniswapV3Factory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IUniswapV3Factory__factory>;
    getContractFactory(
      name: "IUniswapV3Pool",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IUniswapV3Pool__factory>;
    getContractFactory(
      name: "IUniswapV3PoolActions",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IUniswapV3PoolActions__factory>;
    getContractFactory(
      name: "IUniswapV3PoolDerivedState",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IUniswapV3PoolDerivedState__factory>;
    getContractFactory(
      name: "IUniswapV3PoolErrors",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IUniswapV3PoolErrors__factory>;
    getContractFactory(
      name: "IUniswapV3PoolEvents",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IUniswapV3PoolEvents__factory>;
    getContractFactory(
      name: "IUniswapV3PoolImmutables",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IUniswapV3PoolImmutables__factory>;
    getContractFactory(
      name: "IUniswapV3PoolOwnerActions",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IUniswapV3PoolOwnerActions__factory>;
    getContractFactory(
      name: "IUniswapV3PoolState",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IUniswapV3PoolState__factory>;
    getContractFactory(
      name: "TickMath",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TickMath__factory>;
    getContractFactory(
      name: "IUniswapV3SwapCallback",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IUniswapV3SwapCallback__factory>;
    getContractFactory(
      name: "IMulticall",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IMulticall__factory>;
    getContractFactory(
      name: "ISwapRouter",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ISwapRouter__factory>;
    getContractFactory(
      name: "Accounting",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Accounting__factory>;
    getContractFactory(
      name: "AlphaOptionHandler",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AlphaOptionHandler__factory>;
    getContractFactory(
      name: "AlphaPortfolioValuesFeed",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AlphaPortfolioValuesFeed__factory>;
    getContractFactory(
      name: "Authority",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Authority__factory>;
    getContractFactory(
      name: "PerpHedgingReactor",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PerpHedgingReactor__factory>;
    getContractFactory(
      name: "UniswapV3HedgingReactor",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.UniswapV3HedgingReactor__factory>;
    getContractFactory(
      name: "AddressBookInterface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AddressBookInterface__factory>;
    getContractFactory(
      name: "AggregatorV3Interface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AggregatorV3Interface__factory>;
    getContractFactory(
      name: "IController",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IController__factory>;
    getContractFactory(
      name: "IOtoken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IOtoken__factory>;
    getContractFactory(
      name: "IOtokenFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IOtokenFactory__factory>;
    getContractFactory(
      name: "IERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20__factory>;
    getContractFactory(
      name: "IAccounting",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IAccounting__factory>;
    getContractFactory(
      name: "IAuthority",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IAuthority__factory>;
    getContractFactory(
      name: "IHedgingReactor",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IHedgingReactor__factory>;
    getContractFactory(
      name: "ILiquidityPool",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ILiquidityPool__factory>;
    getContractFactory(
      name: "IMarginCalculator",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IMarginCalculator__factory>;
    getContractFactory(
      name: "IOptionRegistry",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IOptionRegistry__factory>;
    getContractFactory(
      name: "IOracle",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IOracle__factory>;
    getContractFactory(
      name: "IPortfolioValuesFeed",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPortfolioValuesFeed__factory>;
    getContractFactory(
      name: "WETH",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.WETH__factory>;
    getContractFactory(
      name: "AccessControl",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AccessControl__factory>;
    getContractFactory(
      name: "BlackScholes",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BlackScholes__factory>;
    getContractFactory(
      name: "CustomErrors",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CustomErrors__factory>;
    getContractFactory(
      name: "NormalDist",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.NormalDist__factory>;
    getContractFactory(
      name: "OptionsCompute",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.OptionsCompute__factory>;
    getContractFactory(
      name: "OpynInteractions",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.OpynInteractions__factory>;
    getContractFactory(
      name: "LiquidityPool",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.LiquidityPool__factory>;
    getContractFactory(
      name: "ForceSend",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ForceSend__factory>;
    getContractFactory(
      name: "MockChainlinkAggregator",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MockChainlinkAggregator__factory>;
    getContractFactory(
      name: "MockPortfolioValuesFeed",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MockPortfolioValuesFeed__factory>;
    getContractFactory(
      name: "OptionHandler",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.OptionHandler__factory>;
    getContractFactory(
      name: "OptionRegistry",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.OptionRegistry__factory>;
    getContractFactory(
      name: "AddressBook",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AddressBook__factory>;
    getContractFactory(
      name: "Controller",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Controller__factory>;
    getContractFactory(
      name: "MarginCalculator",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MarginCalculator__factory>;
    getContractFactory(
      name: "MarginPool",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MarginPool__factory>;
    getContractFactory(
      name: "Oracle",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Oracle__factory>;
    getContractFactory(
      name: "Otoken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Otoken__factory>;
    getContractFactory(
      name: "OtokenFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.OtokenFactory__factory>;
    getContractFactory(
      name: "Whitelist",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Whitelist__factory>;
    getContractFactory(
      name: "PermitCallee",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PermitCallee__factory>;
    getContractFactory(
      name: "WETH9",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.WETH9__factory>;
    getContractFactory(
      name: "PayableProxyController",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PayableProxyController__factory>;
    getContractFactory(
      name: "AddressBookInterface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AddressBookInterface__factory>;
    getContractFactory(
      name: "AggregatorInterface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AggregatorInterface__factory>;
    getContractFactory(
      name: "CalleeInterface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CalleeInterface__factory>;
    getContractFactory(
      name: "CTokenInterface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CTokenInterface__factory>;
    getContractFactory(
      name: "ERC20Interface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20Interface__factory>;
    getContractFactory(
      name: "MarginCalculatorInterface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MarginCalculatorInterface__factory>;
    getContractFactory(
      name: "MarginPoolInterface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MarginPoolInterface__factory>;
    getContractFactory(
      name: "OpynPricerInterface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.OpynPricerInterface__factory>;
    getContractFactory(
      name: "OracleInterface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.OracleInterface__factory>;
    getContractFactory(
      name: "OtokenInterface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.OtokenInterface__factory>;
    getContractFactory(
      name: "WETH9Interface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.WETH9Interface__factory>;
    getContractFactory(
      name: "WhitelistInterface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.WhitelistInterface__factory>;
    getContractFactory(
      name: "WSTETHInterface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.WSTETHInterface__factory>;
    getContractFactory(
      name: "YearnVaultInterface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.YearnVaultInterface__factory>;
    getContractFactory(
      name: "ZeroXExchangeInterface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ZeroXExchangeInterface__factory>;
    getContractFactory(
      name: "Migrations",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Migrations__factory>;
    getContractFactory(
      name: "NewMarginCalculator",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.NewMarginCalculator__factory>;
    getContractFactory(
      name: "NewController",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.NewController__factory>;
    getContractFactory(
      name: "MarginCalculatorInterface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MarginCalculatorInterface__factory>;
    getContractFactory(
      name: "NewWhitelist",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.NewWhitelist__factory>;
    getContractFactory(
      name: "IERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20__factory>;
    getContractFactory(
      name: "Ownable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Ownable__factory>;
    getContractFactory(
      name: "ERC20PermitUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20PermitUpgradeable__factory>;
    getContractFactory(
      name: "IERC20PermitUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20PermitUpgradeable__factory>;
    getContractFactory(
      name: "ERC20Upgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20Upgradeable__factory>;
    getContractFactory(
      name: "IERC20Upgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20Upgradeable__factory>;
    getContractFactory(
      name: "OwnableUpgradeSafe",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.OwnableUpgradeSafe__factory>;
    getContractFactory(
      name: "OwnedUpgradeabilityProxy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.OwnedUpgradeabilityProxy__factory>;
    getContractFactory(
      name: "Proxy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Proxy__factory>;
    getContractFactory(
      name: "UpgradeabilityProxy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.UpgradeabilityProxy__factory>;
    getContractFactory(
      name: "Spawn",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Spawn__factory>;
    getContractFactory(
      name: "ChainLinkPricer",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ChainLinkPricer__factory>;
    getContractFactory(
      name: "CompoundPricer",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CompoundPricer__factory>;
    getContractFactory(
      name: "WstethPricer",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.WstethPricer__factory>;
    getContractFactory(
      name: "YearnPricer",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.YearnPricer__factory>;
    getContractFactory(
      name: "PortfolioValuesFeed",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PortfolioValuesFeed__factory>;
    getContractFactory(
      name: "PriceFeed",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PriceFeed__factory>;
    getContractFactory(
      name: "Protocol",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Protocol__factory>;
    getContractFactory(
      name: "ERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20__factory>;
    getContractFactory(
      name: "MintableERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MintableERC20__factory>;
    getContractFactory(
      name: "WETH",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.WETH__factory>;
    getContractFactory(
      name: "BlackScholesTest",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BlackScholesTest__factory>;
    getContractFactory(
      name: "LiquidityPoolAdjustCollateralTest",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.LiquidityPoolAdjustCollateralTest__factory>;
    getContractFactory(
      name: "OracleMock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.OracleMock__factory>;
    getContractFactory(
      name: "PerpHedgingTest",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PerpHedgingTest__factory>;
    getContractFactory(
      name: "RealTokenMock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.RealTokenMock__factory>;
    getContractFactory(
      name: "ReentrancyGuard",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ReentrancyGuard__factory>;
    getContractFactory(
      name: "UniswapV3HedgingTest",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.UniswapV3HedgingTest__factory>;
    getContractFactory(
      name: "Volatility",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Volatility__factory>;
    getContractFactory(
      name: "VolatilityFeed",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.VolatilityFeed__factory>;

    getContractAt(
      name: "ChainlinkClient",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ChainlinkClient>;
    getContractAt(
      name: "ChainlinkRequestInterface",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ChainlinkRequestInterface>;
    getContractAt(
      name: "ENSInterface",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ENSInterface>;
    getContractAt(
      name: "LinkTokenInterface",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.LinkTokenInterface>;
    getContractAt(
      name: "OperatorInterface",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.OperatorInterface>;
    getContractAt(
      name: "OracleInterface",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.OracleInterface>;
    getContractAt(
      name: "PointerInterface",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PointerInterface>;
    getContractAt(
      name: "ENSResolver",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ENSResolver>;
    getContractAt(
      name: "Initializable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Initializable>;
    getContractAt(
      name: "PausableUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PausableUpgradeable>;
    getContractAt(
      name: "ERC20Upgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20Upgradeable>;
    getContractAt(
      name: "IERC20MetadataUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20MetadataUpgradeable>;
    getContractAt(
      name: "IERC20Upgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20Upgradeable>;
    getContractAt(
      name: "ContextUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ContextUpgradeable>;
    getContractAt(
      name: "AccessControl",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AccessControl>;
    getContractAt(
      name: "AccessControlEnumerable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AccessControlEnumerable>;
    getContractAt(
      name: "IAccessControl",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IAccessControl>;
    getContractAt(
      name: "IAccessControlEnumerable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IAccessControlEnumerable>;
    getContractAt(
      name: "Ownable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Ownable>;
    getContractAt(
      name: "IERC1822Proxiable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1822Proxiable>;
    getContractAt(
      name: "IBeacon",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IBeacon>;
    getContractAt(
      name: "ERC1967Proxy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1967Proxy>;
    getContractAt(
      name: "ERC1967Upgrade",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1967Upgrade>;
    getContractAt(
      name: "Proxy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Proxy>;
    getContractAt(
      name: "ProxyAdmin",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ProxyAdmin>;
    getContractAt(
      name: "TransparentUpgradeableProxy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TransparentUpgradeableProxy>;
    getContractAt(
      name: "Pausable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Pausable>;
    getContractAt(
      name: "ERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20>;
    getContractAt(
      name: "IERC20Permit",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20Permit>;
    getContractAt(
      name: "ERC20Burnable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20Burnable>;
    getContractAt(
      name: "ERC20Pausable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20Pausable>;
    getContractAt(
      name: "IERC20Metadata",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20Metadata>;
    getContractAt(
      name: "IERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20>;
    getContractAt(
      name: "ERC20PresetMinterPauser",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20PresetMinterPauser>;
    getContractAt(
      name: "ERC165",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC165>;
    getContractAt(
      name: "IERC165",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC165>;
    getContractAt(
      name: "IClearingHouseActions",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IClearingHouseActions>;
    getContractAt(
      name: "IClearingHouseCustomErrors",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IClearingHouseCustomErrors>;
    getContractAt(
      name: "IClearingHouseEvents",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IClearingHouseEvents>;
    getContractAt(
      name: "IClearingHouseOwnerActions",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IClearingHouseOwnerActions>;
    getContractAt(
      name: "IClearingHouseSystemActions",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IClearingHouseSystemActions>;
    getContractAt(
      name: "IClearingHouseView",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IClearingHouseView>;
    getContractAt(
      name: "IClearingHouse",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IClearingHouse>;
    getContractAt(
      name: "IExtsload",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IExtsload>;
    getContractAt(
      name: "IGovernable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IGovernable>;
    getContractAt(
      name: "IInsuranceFund",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IInsuranceFund>;
    getContractAt(
      name: "IOracle",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IOracle>;
    getContractAt(
      name: "IVPoolWrapper",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IVPoolWrapper>;
    getContractAt(
      name: "IVQuote",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IVQuote>;
    getContractAt(
      name: "IVToken",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IVToken>;
    getContractAt(
      name: "ClearingHouseLens",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ClearingHouseLens>;
    getContractAt(
      name: "Account",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Account>;
    getContractAt(
      name: "Bisection",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Bisection>;
    getContractAt(
      name: "ArbSys",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ArbSys>;
    getContractAt(
      name: "CollateralDeposit",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.CollateralDeposit>;
    getContractAt(
      name: "FundingPayment",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.FundingPayment>;
    getContractAt(
      name: "LiquidityPosition",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.LiquidityPosition>;
    getContractAt(
      name: "LiquidityPositionSet",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.LiquidityPositionSet>;
    getContractAt(
      name: "PriceMath",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PriceMath>;
    getContractAt(
      name: "SafeCast",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.SafeCast>;
    getContractAt(
      name: "SimulateSwap",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.SimulateSwap>;
    getContractAt(
      name: "Uint32L8ArrayLib",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Uint32L8ArrayLib>;
    getContractAt(
      name: "Uint48L5ArrayLib",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Uint48L5ArrayLib>;
    getContractAt(
      name: "UniswapV3PoolHelper",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.UniswapV3PoolHelper>;
    getContractAt(
      name: "VTokenPositionSet",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.VTokenPositionSet>;
    getContractAt(
      name: "SettlementTokenOracle",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.SettlementTokenOracle>;
    getContractAt(
      name: "ClearingHouse",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ClearingHouse>;
    getContractAt(
      name: "ClearingHouseDeployer",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ClearingHouseDeployer>;
    getContractAt(
      name: "ClearingHouseStorage",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ClearingHouseStorage>;
    getContractAt(
      name: "ClearingHouseView",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ClearingHouseView>;
    getContractAt(
      name: "InsuranceFund",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.InsuranceFund>;
    getContractAt(
      name: "InsuranceFundDeployer",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.InsuranceFundDeployer>;
    getContractAt(
      name: "RageTradeFactory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.RageTradeFactory>;
    getContractAt(
      name: "VQuote",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.VQuote>;
    getContractAt(
      name: "VToken",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.VToken>;
    getContractAt(
      name: "VPoolWrapper",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.VPoolWrapper>;
    getContractAt(
      name: "VPoolWrapperDeployer",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.VPoolWrapperDeployer>;
    getContractAt(
      name: "Extsload",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Extsload>;
    getContractAt(
      name: "Governable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Governable>;
    getContractAt(
      name: "Multicall",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Multicall>;
    getContractAt(
      name: "ProxyAdminDeployer",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ProxyAdminDeployer>;
    getContractAt(
      name: "IUniswapV3MintCallback",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IUniswapV3MintCallback>;
    getContractAt(
      name: "IUniswapV3SwapCallback",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IUniswapV3SwapCallback>;
    getContractAt(
      name: "IUniswapV3Factory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IUniswapV3Factory>;
    getContractAt(
      name: "IUniswapV3Pool",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IUniswapV3Pool>;
    getContractAt(
      name: "IUniswapV3PoolActions",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IUniswapV3PoolActions>;
    getContractAt(
      name: "IUniswapV3PoolDerivedState",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IUniswapV3PoolDerivedState>;
    getContractAt(
      name: "IUniswapV3PoolErrors",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IUniswapV3PoolErrors>;
    getContractAt(
      name: "IUniswapV3PoolEvents",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IUniswapV3PoolEvents>;
    getContractAt(
      name: "IUniswapV3PoolImmutables",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IUniswapV3PoolImmutables>;
    getContractAt(
      name: "IUniswapV3PoolOwnerActions",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IUniswapV3PoolOwnerActions>;
    getContractAt(
      name: "IUniswapV3PoolState",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IUniswapV3PoolState>;
    getContractAt(
      name: "TickMath",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TickMath>;
    getContractAt(
      name: "IUniswapV3SwapCallback",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IUniswapV3SwapCallback>;
    getContractAt(
      name: "IMulticall",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IMulticall>;
    getContractAt(
      name: "ISwapRouter",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ISwapRouter>;
    getContractAt(
      name: "Accounting",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Accounting>;
    getContractAt(
      name: "AlphaOptionHandler",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AlphaOptionHandler>;
    getContractAt(
      name: "AlphaPortfolioValuesFeed",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AlphaPortfolioValuesFeed>;
    getContractAt(
      name: "Authority",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Authority>;
    getContractAt(
      name: "PerpHedgingReactor",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PerpHedgingReactor>;
    getContractAt(
      name: "UniswapV3HedgingReactor",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.UniswapV3HedgingReactor>;
    getContractAt(
      name: "AddressBookInterface",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AddressBookInterface>;
    getContractAt(
      name: "AggregatorV3Interface",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AggregatorV3Interface>;
    getContractAt(
      name: "IController",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IController>;
    getContractAt(
      name: "IOtoken",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IOtoken>;
    getContractAt(
      name: "IOtokenFactory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IOtokenFactory>;
    getContractAt(
      name: "IERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20>;
    getContractAt(
      name: "IAccounting",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IAccounting>;
    getContractAt(
      name: "IAuthority",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IAuthority>;
    getContractAt(
      name: "IHedgingReactor",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IHedgingReactor>;
    getContractAt(
      name: "ILiquidityPool",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ILiquidityPool>;
    getContractAt(
      name: "IMarginCalculator",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IMarginCalculator>;
    getContractAt(
      name: "IOptionRegistry",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IOptionRegistry>;
    getContractAt(
      name: "IOracle",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IOracle>;
    getContractAt(
      name: "IPortfolioValuesFeed",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IPortfolioValuesFeed>;
    getContractAt(
      name: "WETH",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.WETH>;
    getContractAt(
      name: "AccessControl",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AccessControl>;
    getContractAt(
      name: "BlackScholes",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BlackScholes>;
    getContractAt(
      name: "CustomErrors",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.CustomErrors>;
    getContractAt(
      name: "NormalDist",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.NormalDist>;
    getContractAt(
      name: "OptionsCompute",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.OptionsCompute>;
    getContractAt(
      name: "OpynInteractions",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.OpynInteractions>;
    getContractAt(
      name: "LiquidityPool",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.LiquidityPool>;
    getContractAt(
      name: "ForceSend",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ForceSend>;
    getContractAt(
      name: "MockChainlinkAggregator",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MockChainlinkAggregator>;
    getContractAt(
      name: "MockPortfolioValuesFeed",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MockPortfolioValuesFeed>;
    getContractAt(
      name: "OptionHandler",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.OptionHandler>;
    getContractAt(
      name: "OptionRegistry",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.OptionRegistry>;
    getContractAt(
      name: "AddressBook",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AddressBook>;
    getContractAt(
      name: "Controller",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Controller>;
    getContractAt(
      name: "MarginCalculator",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MarginCalculator>;
    getContractAt(
      name: "MarginPool",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MarginPool>;
    getContractAt(
      name: "Oracle",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Oracle>;
    getContractAt(
      name: "Otoken",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Otoken>;
    getContractAt(
      name: "OtokenFactory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.OtokenFactory>;
    getContractAt(
      name: "Whitelist",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Whitelist>;
    getContractAt(
      name: "PermitCallee",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PermitCallee>;
    getContractAt(
      name: "WETH9",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.WETH9>;
    getContractAt(
      name: "PayableProxyController",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PayableProxyController>;
    getContractAt(
      name: "AddressBookInterface",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AddressBookInterface>;
    getContractAt(
      name: "AggregatorInterface",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AggregatorInterface>;
    getContractAt(
      name: "CalleeInterface",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.CalleeInterface>;
    getContractAt(
      name: "CTokenInterface",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.CTokenInterface>;
    getContractAt(
      name: "ERC20Interface",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20Interface>;
    getContractAt(
      name: "MarginCalculatorInterface",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MarginCalculatorInterface>;
    getContractAt(
      name: "MarginPoolInterface",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MarginPoolInterface>;
    getContractAt(
      name: "OpynPricerInterface",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.OpynPricerInterface>;
    getContractAt(
      name: "OracleInterface",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.OracleInterface>;
    getContractAt(
      name: "OtokenInterface",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.OtokenInterface>;
    getContractAt(
      name: "WETH9Interface",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.WETH9Interface>;
    getContractAt(
      name: "WhitelistInterface",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.WhitelistInterface>;
    getContractAt(
      name: "WSTETHInterface",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.WSTETHInterface>;
    getContractAt(
      name: "YearnVaultInterface",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.YearnVaultInterface>;
    getContractAt(
      name: "ZeroXExchangeInterface",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ZeroXExchangeInterface>;
    getContractAt(
      name: "Migrations",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Migrations>;
    getContractAt(
      name: "NewMarginCalculator",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.NewMarginCalculator>;
    getContractAt(
      name: "NewController",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.NewController>;
    getContractAt(
      name: "MarginCalculatorInterface",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MarginCalculatorInterface>;
    getContractAt(
      name: "NewWhitelist",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.NewWhitelist>;
    getContractAt(
      name: "IERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20>;
    getContractAt(
      name: "Ownable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Ownable>;
    getContractAt(
      name: "ERC20PermitUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20PermitUpgradeable>;
    getContractAt(
      name: "IERC20PermitUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20PermitUpgradeable>;
    getContractAt(
      name: "ERC20Upgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20Upgradeable>;
    getContractAt(
      name: "IERC20Upgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20Upgradeable>;
    getContractAt(
      name: "OwnableUpgradeSafe",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.OwnableUpgradeSafe>;
    getContractAt(
      name: "OwnedUpgradeabilityProxy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.OwnedUpgradeabilityProxy>;
    getContractAt(
      name: "Proxy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Proxy>;
    getContractAt(
      name: "UpgradeabilityProxy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.UpgradeabilityProxy>;
    getContractAt(
      name: "Spawn",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Spawn>;
    getContractAt(
      name: "ChainLinkPricer",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ChainLinkPricer>;
    getContractAt(
      name: "CompoundPricer",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.CompoundPricer>;
    getContractAt(
      name: "WstethPricer",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.WstethPricer>;
    getContractAt(
      name: "YearnPricer",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.YearnPricer>;
    getContractAt(
      name: "PortfolioValuesFeed",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PortfolioValuesFeed>;
    getContractAt(
      name: "PriceFeed",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PriceFeed>;
    getContractAt(
      name: "Protocol",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Protocol>;
    getContractAt(
      name: "ERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20>;
    getContractAt(
      name: "MintableERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MintableERC20>;
    getContractAt(
      name: "WETH",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.WETH>;
    getContractAt(
      name: "BlackScholesTest",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BlackScholesTest>;
    getContractAt(
      name: "LiquidityPoolAdjustCollateralTest",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.LiquidityPoolAdjustCollateralTest>;
    getContractAt(
      name: "OracleMock",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.OracleMock>;
    getContractAt(
      name: "PerpHedgingTest",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PerpHedgingTest>;
    getContractAt(
      name: "RealTokenMock",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.RealTokenMock>;
    getContractAt(
      name: "ReentrancyGuard",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ReentrancyGuard>;
    getContractAt(
      name: "UniswapV3HedgingTest",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.UniswapV3HedgingTest>;
    getContractAt(
      name: "Volatility",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Volatility>;
    getContractAt(
      name: "VolatilityFeed",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.VolatilityFeed>;

    // default types
    getContractFactory(
      name: string,
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<ethers.ContractFactory>;
    getContractFactory(
      abi: any[],
      bytecode: ethers.utils.BytesLike,
      signer?: ethers.Signer
    ): Promise<ethers.ContractFactory>;
    getContractAt(
      nameOrAbi: string | any[],
      address: string,
      signer?: ethers.Signer
    ): Promise<ethers.Contract>;
  }
}
