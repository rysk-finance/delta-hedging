/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PRBMathInt, PRBMathIntInterface } from "../PRBMathInt";

const _abi = [
  {
    inputs: [],
    name: "PRBMathSD59x18__AbsInputTooSmall",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "x",
        type: "int256",
      },
    ],
    name: "PRBMathSD59x18__CeilOverflow",
    type: "error",
  },
  {
    inputs: [],
    name: "PRBMathSD59x18__DivInputTooSmall",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "rAbs",
        type: "uint256",
      },
    ],
    name: "PRBMathSD59x18__DivOverflow",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "x",
        type: "int256",
      },
    ],
    name: "PRBMathSD59x18__Exp2InputTooBig",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "x",
        type: "int256",
      },
    ],
    name: "PRBMathSD59x18__ExpInputTooBig",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "x",
        type: "int256",
      },
    ],
    name: "PRBMathSD59x18__FloorUnderflow",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "x",
        type: "int256",
      },
    ],
    name: "PRBMathSD59x18__FromIntOverflow",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "x",
        type: "int256",
      },
    ],
    name: "PRBMathSD59x18__FromIntUnderflow",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "x",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "y",
        type: "int256",
      },
    ],
    name: "PRBMathSD59x18__GmNegativeProduct",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "x",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "y",
        type: "int256",
      },
    ],
    name: "PRBMathSD59x18__GmOverflow",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "x",
        type: "int256",
      },
    ],
    name: "PRBMathSD59x18__LogInputTooSmall",
    type: "error",
  },
  {
    inputs: [],
    name: "PRBMathSD59x18__MulInputTooSmall",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "rAbs",
        type: "uint256",
      },
    ],
    name: "PRBMathSD59x18__MulOverflow",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "rAbs",
        type: "uint256",
      },
    ],
    name: "PRBMathSD59x18__PowuOverflow",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "x",
        type: "int256",
      },
    ],
    name: "PRBMathSD59x18__SqrtNegativeInput",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "x",
        type: "int256",
      },
    ],
    name: "PRBMathSD59x18__SqrtOverflow",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "prod1",
        type: "uint256",
      },
    ],
    name: "PRBMath__MulDivFixedPointOverflow",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "prod1",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "denominator",
        type: "uint256",
      },
    ],
    name: "PRBMath__MulDivOverflow",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "x",
        type: "int256",
      },
    ],
    name: "abs",
    outputs: [
      {
        internalType: "int256",
        name: "result",
        type: "int256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "x",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "y",
        type: "int256",
      },
    ],
    name: "avg",
    outputs: [
      {
        internalType: "int256",
        name: "result",
        type: "int256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "x",
        type: "int256",
      },
    ],
    name: "ceil",
    outputs: [
      {
        internalType: "int256",
        name: "result",
        type: "int256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "x",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "y",
        type: "int256",
      },
    ],
    name: "div",
    outputs: [
      {
        internalType: "int256",
        name: "result",
        type: "int256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "e",
    outputs: [
      {
        internalType: "int256",
        name: "result",
        type: "int256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "x",
        type: "int256",
      },
    ],
    name: "exp",
    outputs: [
      {
        internalType: "int256",
        name: "result",
        type: "int256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "x",
        type: "int256",
      },
    ],
    name: "exp2",
    outputs: [
      {
        internalType: "int256",
        name: "result",
        type: "int256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "x",
        type: "int256",
      },
    ],
    name: "floor",
    outputs: [
      {
        internalType: "int256",
        name: "result",
        type: "int256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "x",
        type: "int256",
      },
    ],
    name: "frac",
    outputs: [
      {
        internalType: "int256",
        name: "result",
        type: "int256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "x",
        type: "int256",
      },
    ],
    name: "fromInt",
    outputs: [
      {
        internalType: "int256",
        name: "result",
        type: "int256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "x",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "y",
        type: "int256",
      },
    ],
    name: "gm",
    outputs: [
      {
        internalType: "int256",
        name: "result",
        type: "int256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "x",
        type: "int256",
      },
    ],
    name: "inv",
    outputs: [
      {
        internalType: "int256",
        name: "result",
        type: "int256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "x",
        type: "int256",
      },
    ],
    name: "ln",
    outputs: [
      {
        internalType: "int256",
        name: "result",
        type: "int256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "x",
        type: "int256",
      },
    ],
    name: "log10",
    outputs: [
      {
        internalType: "int256",
        name: "result",
        type: "int256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "x",
        type: "int256",
      },
    ],
    name: "log2",
    outputs: [
      {
        internalType: "int256",
        name: "result",
        type: "int256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "x",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "y",
        type: "int256",
      },
    ],
    name: "mul",
    outputs: [
      {
        internalType: "int256",
        name: "result",
        type: "int256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "pi",
    outputs: [
      {
        internalType: "int256",
        name: "result",
        type: "int256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "x",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "y",
        type: "int256",
      },
    ],
    name: "pow",
    outputs: [
      {
        internalType: "int256",
        name: "result",
        type: "int256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "x",
        type: "int256",
      },
      {
        internalType: "uint256",
        name: "y",
        type: "uint256",
      },
    ],
    name: "powu",
    outputs: [
      {
        internalType: "int256",
        name: "result",
        type: "int256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "scale",
    outputs: [
      {
        internalType: "int256",
        name: "result",
        type: "int256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "x",
        type: "int256",
      },
    ],
    name: "sqrt",
    outputs: [
      {
        internalType: "int256",
        name: "result",
        type: "int256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "x",
        type: "int256",
      },
    ],
    name: "toInt",
    outputs: [
      {
        internalType: "int256",
        name: "result",
        type: "int256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x6122b761003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe730000000000000000000000000000000000000000301460806040526004361061014c5760003560e01c8063ae2785ac116100c2578063dbbb06d211610086578063dbbb06d214610297578063e0d68737146102aa578063e46751e3146102bd578063ebf274be146102d0578063f51e181a146102e3578063ffae15ba146102f157600080fd5b8063ae2785ac1461022f578063b47ca3c71461024b578063bbe93d911461025e578063d2bc4bc914610271578063da3ff6481461028457600080fd5b8063665df46011610114578063665df460146101bd5780636b300f51146101d0578063850766f1146101e35780638e6f2353146101f657806392b0c5b214610209578063a51636661461021c57600080fd5b80631b5ac4b5146101515780632dd9868d146101765780633a02c9831461018457806342fba7ae1461019757806343509138146101aa575b600080fd5b61016461015f3660046121ec565b6102ff565b60405190815260200160405180910390f35b672b992ddfa23249d6610164565b6101646101923660046121ec565b61033f565b6101646101a53660046121ec565b610366565b6101646101b8366004612205565b6103d9565b6101646101cb3660046121ec565b6104ab565b6101646101de3660046121ec565b610521565b6101646101f13660046121ec565b6105ac565b6101646102043660046121ec565b6105bd565b610164610217366004612205565b6105e8565b61016461022a366004612205565b610629565b61016461023d3660046121ec565b670de0b6b3a7640000900790565b6101646102593660046121ec565b6106ee565b61016461026c366004612205565b61134c565b61016461027f366004612205565b61140e565b6101646102923660046121ec565b611496565b6101646102a53660046121ec565b611501565b6101646102b83660046121ec565b611592565b6101646102cb3660046121ec565b611671565b6101646102de366004612205565b6116e1565b670de0b6b3a7640000610164565b6725b946ebc0b36173610164565b6000600160ff1b82141561032657604051631d0742e360e21b815260040160405180910390fd5b600082126103345781610339565b816000035b92915050565b6000816ec097ce7bc90715b34b9f10000000008161035f5761035f612227565b0592915050565b6000670afdc366fbc00000600160ff1b0382131561039f57604051635399a28560e11b8152600481018390526024015b60405180910390fd5b670de0b6b3a76400008207806103b7578291506103d3565b808303915060008313156103d357670de0b6b3a7640000820191505b50919050565b6000600160ff1b8314806103f05750600160ff1b82145b1561040e5760405163b3c754a360e01b815260040160405180910390fd5b6000806000851261041f5784610424565b846000035b9150600084126104345783610439565b836000035b9050600061045083670de0b6b3a764000084611716565b90506001600160ff1b0381111561047d57604051637cb4bef560e01b815260048101829052602401610396565b600019808713908613808218600114610496578261049f565b61049f83612253565b98975050505050505050565b6000808212156104d15760405163608c83ff60e11b815260048101839052602401610396565b7809392ee8e921d5d073aff322e62439fcf32d7f344649470f9082131561050e57604051632c482c3960e01b815260048101839052602401610396565b610339670de0b6b3a764000083026117e3565b60007809392ee8e921d5d073aff322e62439fcf32d7f344649470f8f198212156105615760405163e608e18b60e01b815260048101839052602401610396565b7809392ee8e921d5d073aff322e62439fcf32d7f344649470f9082131561059e576040516371f72a3160e01b815260048101839052602401610396565b50670de0b6b3a76400000290565b6000670de0b6b3a76400008261035f565b60006714057b7ef767814f670de0b6b3a76400006105da84611592565b028161035f5761035f612227565b60008261060d5781156105fc576000610606565b670de0b6b3a76400005b9050610339565b6106226102a561061c85611592565b8461134c565b9392505050565b600080610635846102ff565b9050600080846001161161065157670de0b6b3a7640000610653565b815b9050600184901c5b801561068b5761066b838461194f565b9250600181161561068357610680828461194f565b91505b60011c61065b565b6001600160ff1b038211156106b9576040516001624ea43360e01b0319815260048101839052602401610396565b600080871280156106cd5750856001166001145b9050806106da57826106e3565b6106e383612253565b979650505050505050565b60008082136107135760405163309fa7dd60e11b815260048101839052602401610396565b8160018114610e1d57600a8114610e2e5760648114610e3f576103e88114610e50576127108114610e6157620186a08114610e7257620f42408114610e8357629896808114610e94576305f5e1008114610ea557633b9aca008114610eb6576402540be4008114610ec75764174876e8008114610ed85764e8d4a510008114610ee9576509184e72a0008114610efa57655af3107a40008114610f0b5766038d7ea4c680008114610f1c57662386f26fc100008114610f2d5767016345785d8a00008114610f3e57670de0b6b3a76400008114610f4f57678ac7230489e800008114610f585768056bc75e2d631000008114610f6857683635c9adc5dea000008114610f785769021e19e0c9bab24000008114610f885769152d02c7e14af68000008114610f985769d3c21bcecceda10000008114610fa8576a084595161401484a0000008114610fb8576a52b7d2dcc80cd2e40000008114610fc8576b033b2e3c9fd0803ce80000008114610fd8576b204fce5e3e250261100000008114610fe8576c01431e0fae6d7217caa00000008114610ff8576c0c9f2c9cd04674edea400000008114611008576c7e37be2022c0914b26800000008114611018576d04ee2d6d415b85acef81000000008114611028576d314dc6448d9338c15b0a000000008114611038576e01ed09bead87c0378d8e64000000008114611048576e13426172c74d822b878fe8000000008114611058576ec097ce7bc90715b34b9f10000000008114611068576f0785ee10d5da46d900f436a0000000008114611078576f4b3b4ca85a86c47a098a2240000000008114611089577002f050fe938943acc45f65568000000000811461109a57701d6329f1c35ca4bfabb9f561000000000081146110ab57710125dfa371a19e6f7cb54395ca000000000081146110bc57710b7abc627050305adf14a3d9e4000000000081146110cd577172cb5bd86321e38cb6ce6682e8000000000081146110de5772047bf19673df52e37f2410011d10000000000081146110ef57722cd76fe086b93ce2f768a00b22a000000000008114611100577301c06a5ec5433c60ddaa16406f5a40000000000081146111115773118427b3b4a05bc8a8a4de84598680000000000081146111225773af298d050e4395d69670b12b7f410000000000008114611133577406d79f82328ea3da61e066ebb2f88a00000000000081146111445774446c3b15f9926687d2c40534fdb5640000000000008114611155577502ac3a4edbbfb8014e3ba83411e915e8000000000000811461116657751aba4714957d300d0e549208b31adb1000000000000081146111775776010b46c6cdd6e3e0828f4db456ff0c8ea0000000000000811461118857760a70c3c40a64e6c51999090b65f67d9240000000000000811461119957766867a5a867f103b2fffa5a71fba0e7b68000000000000081146111aa577704140c78940f6a24fdffc78873d4490d210000000000000081146111bb577728c87cb5c89a2571ebfdcb54864ada834a0000000000000081146111cc57780197d4df19d605767337e9f14d3eec8920e40000000000000081146111dd57780fee50b7025c36a0802f236d04753d5b48e80000000000000081146111ee57789f4f2726179a224501d762422c946590d9100000000000000081146111ff5779063917877cec0556b21269d695bdcbf7a87aa000000000000000811461121057793e3aeb4ae1383562f4b82261d969f7ac94ca40000000000000008114611221577a026e4d30eccc3215dd8f3157d27e23acbdcfe680000000000000008114611232577a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008114611243577af316271c7fc3908a8bef464e3945ef7a25360a00000000000000008114611254577b097edd871cfda3a5697758bf0e3cbb5ac5741c6400000000000000008114611265577b5ef4a74721e864761ea977768e5f518bb6891be800000000000000008114611276577c03b58e88c75313ec9d329eaaa18fb92f75215b171000000000000000008114611287577c25179157c93ec73e23fa32aa4f9d3bda934d8ee6a000000000000000008114611298577d0172ebad6ddc73c86d67c5faa71c245689c107950240000000000000000081146112a9577d0e7d34c64a9c85d4460dbbca87196b61618a4bd21680000000000000000081146112ba577d90e40fbeea1d3a4abc8955e946fe31cdcf66f634e100000000000000000081146112cb577e05a8e89d75252446eb5d5d5b1cc5edf20a1a059e10ca00000000000000000081146112dc577e3899162693736ac531a5a58f1fbb4b746504382ca7e400000000000000000081146112ed577546bf5bb0385045767e0f0ef2e7aa1e517e454637d1dd604b1b81146112fe577f161bcca7119915b50764b4abe86529797775a5f1719510000000000000000000811461130f576001600160ff1b03915061131c565b67f9ccd8a1c507ffff19915061131c565b67ebec21ee1da3ffff19915061131c565b67de0b6b3a763fffff19915061131c565b67d02ab486cedbffff19915061131c565b67c249fdd32777ffff19915061131c565b67b469471f8013ffff19915061131c565b67a688906bd8afffff19915061131c565b6798a7d9b8314bffff19915061131c565b678ac7230489e7ffff19915061131c565b677ce66c50e283ffff19915061131c565b676f05b59d3b1fffff19915061131c565b676124fee993bbffff19915061131c565b6753444835ec57ffff19915061131c565b674563918244f3ffff19915061131c565b673782dace9d8fffff19915061131c565b6729a2241af62bffff19915061131c565b671bc16d674ec7ffff19915061131c565b670de0b6b3a763ffff19915061131c565b6000915061131c565b670de0b6b3a7640000915061131c565b671bc16d674ec80000915061131c565b6729a2241af62c0000915061131c565b673782dace9d900000915061131c565b674563918244f40000915061131c565b6753444835ec580000915061131c565b676124fee993bc0000915061131c565b676f05b59d3b200000915061131c565b677ce66c50e2840000915061131c565b678ac7230489e80000915061131c565b6798a7d9b8314c0000915061131c565b67a688906bd8b00000915061131c565b67b469471f80140000915061131c565b67c249fdd327780000915061131c565b67d02ab486cedc0000915061131c565b67de0b6b3a76400000915061131c565b67ebec21ee1da40000915061131c565b67f9ccd8a1c5080000915061131c565b680107ad8f556c6c0000915061131c565b6801158e460913d00000915061131c565b6801236efcbcbb340000915061131c565b6801314fb37062980000915061131c565b68013f306a2409fc0000915061131c565b68014d1120d7b1600000915061131c565b68015af1d78b58c40000915061131c565b680168d28e3f00280000915061131c565b680176b344f2a78c0000915061131c565b68018493fba64ef00000915061131c565b68019274b259f6540000915061131c565b6801a055690d9db80000915061131c565b6801ae361fc1451c0000915061131c565b6801bc16d674ec800000915061131c565b6801c9f78d2893e40000915061131c565b6801d7d843dc3b480000915061131c565b6801e5b8fa8fe2ac0000915061131c565b6801f399b1438a100000915061131c565b6802017a67f731740000915061131c565b68020f5b1eaad8d80000915061131c565b68021d3bd55e803c0000915061131c565b68022b1c8c1227a00000915061131c565b680238fd42c5cf040000915061131c565b680246ddf97976680000915061131c565b680254beb02d1dcc0000915061131c565b6802629f66e0c5300000915061131c565b680270801d946c940000915061131c565b68027e60d44813f80000915061131c565b68028c418afbbb5c0000915061131c565b68029a2241af62c00000915061131c565b6802a802f8630a240000915061131c565b6802b5e3af16b1880000915061131c565b6802c3c465ca58ec0000915061131c565b6802d1a51c7e00500000915061131c565b6802df85d331a7b40000915061131c565b6802ed6689e54f180000915061131c565b6802fb474098f67c0000915061131c565b68030927f74c9de00000915061131c565b68031708ae0045440000915061131c565b680324e964b3eca8000091505b506001600160ff1b0381141561134757672e19dc008126bf2b670de0b6b3a76400006105da84611592565b919050565b6000600160ff1b8314806113635750600160ff1b82145b1561138157604051630d01a11b60e21b815260040160405180910390fd5b600080600085126113925784611397565b846000035b9150600084126113a757836113ac565b836000035b905060006113ba838361194f565b90506001600160ff1b038111156113e75760405163bf79e8d960e01b815260048101829052602401610396565b600019808713908613808218600114611400578261049f565b505060000395945050505050565b60008261141d57506000610339565b8282028284828161143057611430612227565b0514611459576040516307dc84c760e11b81526004810185905260248101849052604401610396565b600081121561148557604051637f1883cd60e11b81526004810185905260248101849052604401610396565b61148e816117e3565b949350505050565b6000670afdc366fbc00000600160ff1b018212156114ca57604051637c00653f60e01b815260048101839052602401610396565b670de0b6b3a76400008207806114e2578291506103d3565b808303915060008312156103d35750670de0b6b3a763ffff1901919050565b60008082121561154e5768033dd1780914b971141982121561152557506000919050565b61153182600003611501565b6ec097ce7bc90715b34b9f10000000008161035f5761035f612227565b680a688906bd8b000000821261157a5760405163e69458f960e01b815260048101839052602401610396565b670de0b6b3a7640000604083901b0461062281611a11565b60008082136115b75760405163309fa7dd60e11b815260048101839052602401610396565b6000670de0b6b3a764000083126115d0575060016115ea565b6000199050826ec097ce7bc90715b34b9f10000000000492505b60006115ff670de0b6b3a7640000850561210d565b670de0b6b3a7640000808202945090915084821d9081141561162357505002919050565b6706f05b59d3b200005b600081131561166857670de0b6b3a7640000828002059150671bc16d674ec800008212611660579384019360019190911d905b60011d61162d565b50505002919050565b600068023f2fa8f6da5b9d311982121561168d57506000919050565b680736ea4425c11ac63182126116b9576040516399bb754160e01b815260048101839052602401610396565b6714057b7ef767814f8202610622670de0b6b3a76400006706f05b59d3b20000830105611501565b6000600183811d9083901d0181811215611704576001838517168101915061170f565b828416600116810191505b5092915050565b6000808060001985870985870292508281108382030391505080600014156117515783828161174757611747612227565b0492505050610622565b83811061177b57604051631dcf306360e21b81526004810182905260248101859052604401610396565b600084868809600260036001881981018916988990049182028318808302840302808302840302808302840302808302840302808302840302918202909203026000889003889004909101858311909403939093029303949094049190911702949350505050565b6000816117f257506000919050565b50600181600160801b811061180c5760409190911b9060801c5b600160401b81106118225760209190911b9060401c5b64010000000081106118395760109190911b9060201c5b62010000811061184e5760089190911b9060101c5b61010081106118625760049190911b9060081c5b601081106118755760029190911b9060041c5b6008811061188557600182901b91505b600182848161189657611896612227565b048301901c915060018284816118ae576118ae612227565b048301901c915060018284816118c6576118c6612227565b048301901c915060018284816118de576118de612227565b048301901c915060018284816118f6576118f6612227565b048301901c9150600182848161190e5761190e612227565b048301901c9150600182848161192657611926612227565b048301901c9150600082848161193e5761193e612227565b04905080831015610622578261148e565b60008080600019848609848602925082811083820303915050670de0b6b3a764000081106119935760405163698d9a0160e11b815260048101829052602401610396565b600080670de0b6b3a76400008688099150506706f05b59d3b1ffff8111826119cd5780670de0b6b3a7640000850401945050505050610339565b620400008285030493909111909103600160ee1b02919091177faccb18165bd6fe31ae1cf318dc5b51eee0e1ba569b88cd74c1773b91fac106690201905092915050565b600160bf1b678000000000000000821615611a355768016a09e667f3bcc9090260401c5b674000000000000000821615611a54576801306fe0a31b7152df0260401c5b672000000000000000821615611a73576801172b83c7d517adce0260401c5b671000000000000000821615611a925768010b5586cf9890f62a0260401c5b670800000000000000821615611ab1576801059b0d31585743ae0260401c5b670400000000000000821615611ad057680102c9a3e778060ee70260401c5b670200000000000000821615611aef5768010163da9fb33356d80260401c5b670100000000000000821615611b0e57680100b1afa5abcbed610260401c5b6680000000000000821615611b2c5768010058c86da1c09ea20260401c5b6640000000000000821615611b4a576801002c605e2e8cec500260401c5b6620000000000000821615611b6857680100162f3904051fa10260401c5b6610000000000000821615611b86576801000b175effdc76ba0260401c5b6608000000000000821615611ba457680100058ba01fb9f96d0260401c5b6604000000000000821615611bc25768010002c5cc37da94920260401c5b6602000000000000821615611be0576801000162e525ee05470260401c5b6601000000000000821615611bfe5768010000b17255775c040260401c5b65800000000000821615611c1b576801000058b91b5bc9ae0260401c5b65400000000000821615611c3857680100002c5c89d5ec6d0260401c5b65200000000000821615611c555768010000162e43f4f8310260401c5b65100000000000821615611c7257680100000b1721bcfc9a0260401c5b65080000000000821615611c8f5768010000058b90cf1e6e0260401c5b65040000000000821615611cac576801000002c5c863b73f0260401c5b65020000000000821615611cc957680100000162e430e5a20260401c5b65010000000000821615611ce6576801000000b1721835510260401c5b648000000000821615611d0257680100000058b90c0b490260401c5b644000000000821615611d1e5768010000002c5c8601cc0260401c5b642000000000821615611d3a576801000000162e42fff00260401c5b641000000000821615611d565768010000000b17217fbb0260401c5b640800000000821615611d72576801000000058b90bfce0260401c5b640400000000821615611d8e57680100000002c5c85fe30260401c5b640200000000821615611daa5768010000000162e42ff10260401c5b640100000000821615611dc657680100000000b17217f80260401c5b6380000000821615611de15768010000000058b90bfc0260401c5b6340000000821615611dfc576801000000002c5c85fe0260401c5b6320000000821615611e1757680100000000162e42ff0260401c5b6310000000821615611e32576801000000000b17217f0260401c5b6308000000821615611e4d57680100000000058b90c00260401c5b6304000000821615611e685768010000000002c5c8600260401c5b6302000000821615611e83576801000000000162e4300260401c5b6301000000821615611e9e5768010000000000b172180260401c5b62800000821615611eb8576801000000000058b90c0260401c5b62400000821615611ed257680100000000002c5c860260401c5b62200000821615611eec5768010000000000162e430260401c5b62100000821615611f0657680100000000000b17210260401c5b62080000821615611f205768010000000000058b910260401c5b62040000821615611f3a576801000000000002c5c80260401c5b62020000821615611f5457680100000000000162e40260401c5b62010000821615611f6e576801000000000000b1720260401c5b618000821615611f8757680100000000000058b90260401c5b614000821615611fa05768010000000000002c5d0260401c5b612000821615611fb9576801000000000000162e0260401c5b611000821615611fd25768010000000000000b170260401c5b610800821615611feb576801000000000000058c0260401c5b61040082161561200457680100000000000002c60260401c5b61020082161561201d57680100000000000001630260401c5b61010082161561203657680100000000000000b10260401c5b608082161561204e57680100000000000000590260401c5b6040821615612066576801000000000000002c0260401c5b602082161561207e57680100000000000000160260401c5b6010821615612096576801000000000000000b0260401c5b60088216156120ae57680100000000000000060260401c5b60048216156120c657680100000000000000030260401c5b60028216156120de57680100000000000000010260401c5b60018216156120f657680100000000000000010260401c5b670de0b6b3a76400000260409190911c60bf031c90565b6000600160801b821061212d57608091821c9161212a9082612269565b90505b600160401b821061214b57604091821c916121489082612269565b90505b640100000000821061216a57602091821c916121679082612269565b90505b62010000821061218757601091821c916121849082612269565b90505b61010082106121a357600891821c916121a09082612269565b90505b601082106121be57600491821c916121bb9082612269565b90505b600482106121d957600291821c916121d69082612269565b90505b6002821061134757610339600182612269565b6000602082840312156121fe57600080fd5b5035919050565b6000806040838503121561221857600080fd5b50508035926020909101359150565b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600160ff1b8214156103345761033461223d565b6000821982111561227c5761227c61223d565b50019056fea2646970667358221220a55459c68d2f9d1ec66bf85b7d9bf634ac26cc24cbcf793bf48c9148bb2fccae64736f6c63430008090033";

type PRBMathIntConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PRBMathIntConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PRBMathInt__factory extends ContractFactory {
  constructor(...args: PRBMathIntConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<PRBMathInt> {
    return super.deploy(overrides || {}) as Promise<PRBMathInt>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): PRBMathInt {
    return super.attach(address) as PRBMathInt;
  }
  connect(signer: Signer): PRBMathInt__factory {
    return super.connect(signer) as PRBMathInt__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PRBMathIntInterface {
    return new utils.Interface(_abi) as PRBMathIntInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PRBMathInt {
    return new Contract(address, _abi, signerOrProvider) as PRBMathInt;
  }
}
