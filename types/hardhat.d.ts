/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { ethers } from "ethers";
import {
  FactoryOptions,
  HardhatEthersHelpers as HardhatEthersHelpersBase,
} from "@nomiclabs/hardhat-ethers/types";

import * as Contracts from ".";

declare module "hardhat/types/runtime" {
  interface HardhatEthersHelpers extends HardhatEthersHelpersBase {
    getContractFactory(
      name: "AccessControl",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AccessControl__factory>;
    getContractFactory(
      name: "IAccessControl",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IAccessControl__factory>;
    getContractFactory(
      name: "Ownable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Ownable__factory>;
    getContractFactory(
      name: "Pausable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Pausable__factory>;
    getContractFactory(
      name: "ERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC165__factory>;
    getContractFactory(
      name: "IERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC165__factory>;
    getContractFactory(
      name: "IUniswapV3SwapCallback",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IUniswapV3SwapCallback__factory>;
    getContractFactory(
      name: "ISwapRouter",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ISwapRouter__factory>;
    getContractFactory(
      name: "UniswapV3HedgingReactor",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.UniswapV3HedgingReactor__factory>;
    getContractFactory(
      name: "AddressBookInterface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AddressBookInterface__factory>;
    getContractFactory(
      name: "AggregatorV3Interface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AggregatorV3Interface__factory>;
    getContractFactory(
      name: "IController",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IController__factory>;
    getContractFactory(
      name: "IOtoken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IOtoken__factory>;
    getContractFactory(
      name: "IOtokenFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IOtokenFactory__factory>;
    getContractFactory(
      name: "IERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20__factory>;
    getContractFactory(
      name: "IHedgingReactor",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IHedgingReactor__factory>;
    getContractFactory(
      name: "IMarginCalculator",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IMarginCalculator__factory>;
    getContractFactory(
      name: "IOracle",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IOracle__factory>;
    getContractFactory(
      name: "IUniswapV2Factory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IUniswapV2Factory__factory>;
    getContractFactory(
      name: "IUniswapV2Pair",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IUniswapV2Pair__factory>;
    getContractFactory(
      name: "IUniswapV2Router02",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IUniswapV2Router02__factory>;
    getContractFactory(
      name: "WETH",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.WETH__factory>;
    getContractFactory(
      name: "BlackScholes",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BlackScholes__factory>;
    getContractFactory(
      name: "Constants",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Constants__factory>;
    getContractFactory(
      name: "NormalDist",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.NormalDist__factory>;
    getContractFactory(
      name: "PRBMathInt",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PRBMathInt__factory>;
    getContractFactory(
      name: "PRBMathUint",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PRBMathUint__factory>;
    getContractFactory(
      name: "LiquidityPool",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.LiquidityPool__factory>;
    getContractFactory(
      name: "OptionRegistry",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.OptionRegistry__factory>;
    getContractFactory(
      name: "OptionRegistryV2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.OptionRegistryV2__factory>;
    getContractFactory(
      name: "Protocol",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Protocol__factory>;
    getContractFactory(
      name: "AddressBook",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AddressBook__factory>;
    getContractFactory(
      name: "Controller",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Controller__factory>;
    getContractFactory(
      name: "MarginCalculator",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MarginCalculator__factory>;
    getContractFactory(
      name: "MarginPool",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MarginPool__factory>;
    getContractFactory(
      name: "Oracle",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Oracle__factory>;
    getContractFactory(
      name: "Otoken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Otoken__factory>;
    getContractFactory(
      name: "OtokenFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.OtokenFactory__factory>;
    getContractFactory(
      name: "Whitelist",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Whitelist__factory>;
    getContractFactory(
      name: "PermitCallee",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PermitCallee__factory>;
    getContractFactory(
      name: "WETH9",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.WETH9__factory>;
    getContractFactory(
      name: "PayableProxyController",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PayableProxyController__factory>;
    getContractFactory(
      name: "AddressBookInterface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AddressBookInterface__factory>;
    getContractFactory(
      name: "AggregatorInterface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AggregatorInterface__factory>;
    getContractFactory(
      name: "CalleeInterface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CalleeInterface__factory>;
    getContractFactory(
      name: "CTokenInterface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CTokenInterface__factory>;
    getContractFactory(
      name: "ERC20Interface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20Interface__factory>;
    getContractFactory(
      name: "MarginCalculatorInterface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MarginCalculatorInterface__factory>;
    getContractFactory(
      name: "MarginPoolInterface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MarginPoolInterface__factory>;
    getContractFactory(
      name: "OpynPricerInterface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.OpynPricerInterface__factory>;
    getContractFactory(
      name: "OracleInterface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.OracleInterface__factory>;
    getContractFactory(
      name: "OtokenInterface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.OtokenInterface__factory>;
    getContractFactory(
      name: "WETH9Interface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.WETH9Interface__factory>;
    getContractFactory(
      name: "WhitelistInterface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.WhitelistInterface__factory>;
    getContractFactory(
      name: "WSTETHInterface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.WSTETHInterface__factory>;
    getContractFactory(
      name: "YearnVaultInterface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.YearnVaultInterface__factory>;
    getContractFactory(
      name: "ZeroXExchangeInterface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ZeroXExchangeInterface__factory>;
    getContractFactory(
      name: "Migrations",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Migrations__factory>;
    getContractFactory(
      name: "Mock0xERC20Proxy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Mock0xERC20Proxy__factory>;
    getContractFactory(
      name: "Mock0xExchange",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Mock0xExchange__factory>;
    getContractFactory(
      name: "MockAddressBook",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MockAddressBook__factory>;
    getContractFactory(
      name: "MockChainlinkAggregator",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MockChainlinkAggregator__factory>;
    getContractFactory(
      name: "MockController",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MockController__factory>;
    getContractFactory(
      name: "MockCToken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MockCToken__factory>;
    getContractFactory(
      name: "MockCUSDC",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MockCUSDC__factory>;
    getContractFactory(
      name: "MockDumbERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MockDumbERC20__factory>;
    getContractFactory(
      name: "MockERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MockERC20__factory>;
    getContractFactory(
      name: "MockOracle",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MockOracle__factory>;
    getContractFactory(
      name: "MockOtoken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MockOtoken__factory>;
    getContractFactory(
      name: "MockPermitERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MockPermitERC20__factory>;
    getContractFactory(
      name: "MockPricer",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MockPricer__factory>;
    getContractFactory(
      name: "MockWhitelistModule",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MockWhitelistModule__factory>;
    getContractFactory(
      name: "MockWSTETHToken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MockWSTETHToken__factory>;
    getContractFactory(
      name: "MockYToken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MockYToken__factory>;
    getContractFactory(
      name: "NewMarginCalculator",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.NewMarginCalculator__factory>;
    getContractFactory(
      name: "NewWhitelist",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.NewWhitelist__factory>;
    getContractFactory(
      name: "IERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20__factory>;
    getContractFactory(
      name: "Ownable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Ownable__factory>;
    getContractFactory(
      name: "ERC20PermitUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20PermitUpgradeable__factory>;
    getContractFactory(
      name: "IERC20PermitUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20PermitUpgradeable__factory>;
    getContractFactory(
      name: "ERC20Upgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20Upgradeable__factory>;
    getContractFactory(
      name: "IERC20Upgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20Upgradeable__factory>;
    getContractFactory(
      name: "OwnableUpgradeSafe",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.OwnableUpgradeSafe__factory>;
    getContractFactory(
      name: "OwnedUpgradeabilityProxy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.OwnedUpgradeabilityProxy__factory>;
    getContractFactory(
      name: "Proxy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Proxy__factory>;
    getContractFactory(
      name: "UpgradeabilityProxy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.UpgradeabilityProxy__factory>;
    getContractFactory(
      name: "Spawn",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Spawn__factory>;
    getContractFactory(
      name: "ChainLinkPricer",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ChainLinkPricer__factory>;
    getContractFactory(
      name: "CompoundPricer",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CompoundPricer__factory>;
    getContractFactory(
      name: "WstethPricer",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.WstethPricer__factory>;
    getContractFactory(
      name: "YearnPricer",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.YearnPricer__factory>;
    getContractFactory(
      name: "ActionTester",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ActionTester__factory>;
    getContractFactory(
      name: "CalculatorTester",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CalculatorTester__factory>;
    getContractFactory(
      name: "CalleeAllowanceTester",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CalleeAllowanceTester__factory>;
    getContractFactory(
      name: "CallTester",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CallTester__factory>;
    getContractFactory(
      name: "FixedPointInt256Tester",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.FixedPointInt256Tester__factory>;
    getContractFactory(
      name: "FlashUnwrap",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.FlashUnwrap__factory>;
    getContractFactory(
      name: "ForceSend",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ForceSend__factory>;
    getContractFactory(
      name: "MarginVaultTester",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MarginVaultTester__factory>;
    getContractFactory(
      name: "OtokenImplV1",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.OtokenImplV1__factory>;
    getContractFactory(
      name: "SignedConverterTester",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SignedConverterTester__factory>;
    getContractFactory(
      name: "UpgradeableContractV1",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.UpgradeableContractV1__factory>;
    getContractFactory(
      name: "UpgradeableContractV2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.UpgradeableContractV2__factory>;
    getContractFactory(
      name: "PriceFeed",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PriceFeed__factory>;
    getContractFactory(
      name: "ERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20__factory>;
    getContractFactory(
      name: "MintableERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MintableERC20__factory>;
    getContractFactory(
      name: "WETH",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.WETH__factory>;
    getContractFactory(
      name: "BlackScholesTest",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BlackScholesTest__factory>;
    getContractFactory(
      name: "ReentrancyGuard",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ReentrancyGuard__factory>;
    getContractFactory(
      name: "UniswapV3HedgingTest",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.UniswapV3HedgingTest__factory>;
    getContractFactory(
      name: "Volatility",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Volatility__factory>;

    getContractAt(
      name: "AccessControl",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AccessControl>;
    getContractAt(
      name: "IAccessControl",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IAccessControl>;
    getContractAt(
      name: "Ownable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Ownable>;
    getContractAt(
      name: "Pausable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Pausable>;
    getContractAt(
      name: "ERC165",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC165>;
    getContractAt(
      name: "IERC165",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC165>;
    getContractAt(
      name: "IUniswapV3SwapCallback",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IUniswapV3SwapCallback>;
    getContractAt(
      name: "ISwapRouter",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ISwapRouter>;
    getContractAt(
      name: "UniswapV3HedgingReactor",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.UniswapV3HedgingReactor>;
    getContractAt(
      name: "AddressBookInterface",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AddressBookInterface>;
    getContractAt(
      name: "AggregatorV3Interface",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AggregatorV3Interface>;
    getContractAt(
      name: "IController",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IController>;
    getContractAt(
      name: "IOtoken",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IOtoken>;
    getContractAt(
      name: "IOtokenFactory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IOtokenFactory>;
    getContractAt(
      name: "IERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20>;
    getContractAt(
      name: "IHedgingReactor",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IHedgingReactor>;
    getContractAt(
      name: "IMarginCalculator",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IMarginCalculator>;
    getContractAt(
      name: "IOracle",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IOracle>;
    getContractAt(
      name: "IUniswapV2Factory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IUniswapV2Factory>;
    getContractAt(
      name: "IUniswapV2Pair",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IUniswapV2Pair>;
    getContractAt(
      name: "IUniswapV2Router02",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IUniswapV2Router02>;
    getContractAt(
      name: "WETH",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.WETH>;
    getContractAt(
      name: "BlackScholes",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BlackScholes>;
    getContractAt(
      name: "Constants",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Constants>;
    getContractAt(
      name: "NormalDist",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.NormalDist>;
    getContractAt(
      name: "PRBMathInt",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PRBMathInt>;
    getContractAt(
      name: "PRBMathUint",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PRBMathUint>;
    getContractAt(
      name: "LiquidityPool",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.LiquidityPool>;
    getContractAt(
      name: "OptionRegistry",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.OptionRegistry>;
    getContractAt(
      name: "OptionRegistryV2",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.OptionRegistryV2>;
    getContractAt(
      name: "Protocol",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Protocol>;
    getContractAt(
      name: "AddressBook",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AddressBook>;
    getContractAt(
      name: "Controller",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Controller>;
    getContractAt(
      name: "MarginCalculator",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MarginCalculator>;
    getContractAt(
      name: "MarginPool",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MarginPool>;
    getContractAt(
      name: "Oracle",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Oracle>;
    getContractAt(
      name: "Otoken",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Otoken>;
    getContractAt(
      name: "OtokenFactory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.OtokenFactory>;
    getContractAt(
      name: "Whitelist",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Whitelist>;
    getContractAt(
      name: "PermitCallee",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PermitCallee>;
    getContractAt(
      name: "WETH9",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.WETH9>;
    getContractAt(
      name: "PayableProxyController",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PayableProxyController>;
    getContractAt(
      name: "AddressBookInterface",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AddressBookInterface>;
    getContractAt(
      name: "AggregatorInterface",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AggregatorInterface>;
    getContractAt(
      name: "CalleeInterface",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.CalleeInterface>;
    getContractAt(
      name: "CTokenInterface",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.CTokenInterface>;
    getContractAt(
      name: "ERC20Interface",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20Interface>;
    getContractAt(
      name: "MarginCalculatorInterface",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MarginCalculatorInterface>;
    getContractAt(
      name: "MarginPoolInterface",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MarginPoolInterface>;
    getContractAt(
      name: "OpynPricerInterface",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.OpynPricerInterface>;
    getContractAt(
      name: "OracleInterface",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.OracleInterface>;
    getContractAt(
      name: "OtokenInterface",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.OtokenInterface>;
    getContractAt(
      name: "WETH9Interface",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.WETH9Interface>;
    getContractAt(
      name: "WhitelistInterface",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.WhitelistInterface>;
    getContractAt(
      name: "WSTETHInterface",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.WSTETHInterface>;
    getContractAt(
      name: "YearnVaultInterface",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.YearnVaultInterface>;
    getContractAt(
      name: "ZeroXExchangeInterface",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ZeroXExchangeInterface>;
    getContractAt(
      name: "Migrations",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Migrations>;
    getContractAt(
      name: "Mock0xERC20Proxy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Mock0xERC20Proxy>;
    getContractAt(
      name: "Mock0xExchange",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Mock0xExchange>;
    getContractAt(
      name: "MockAddressBook",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MockAddressBook>;
    getContractAt(
      name: "MockChainlinkAggregator",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MockChainlinkAggregator>;
    getContractAt(
      name: "MockController",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MockController>;
    getContractAt(
      name: "MockCToken",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MockCToken>;
    getContractAt(
      name: "MockCUSDC",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MockCUSDC>;
    getContractAt(
      name: "MockDumbERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MockDumbERC20>;
    getContractAt(
      name: "MockERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MockERC20>;
    getContractAt(
      name: "MockOracle",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MockOracle>;
    getContractAt(
      name: "MockOtoken",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MockOtoken>;
    getContractAt(
      name: "MockPermitERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MockPermitERC20>;
    getContractAt(
      name: "MockPricer",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MockPricer>;
    getContractAt(
      name: "MockWhitelistModule",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MockWhitelistModule>;
    getContractAt(
      name: "MockWSTETHToken",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MockWSTETHToken>;
    getContractAt(
      name: "MockYToken",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MockYToken>;
    getContractAt(
      name: "NewMarginCalculator",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.NewMarginCalculator>;
    getContractAt(
      name: "NewWhitelist",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.NewWhitelist>;
    getContractAt(
      name: "IERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20>;
    getContractAt(
      name: "Ownable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Ownable>;
    getContractAt(
      name: "ERC20PermitUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20PermitUpgradeable>;
    getContractAt(
      name: "IERC20PermitUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20PermitUpgradeable>;
    getContractAt(
      name: "ERC20Upgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20Upgradeable>;
    getContractAt(
      name: "IERC20Upgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20Upgradeable>;
    getContractAt(
      name: "OwnableUpgradeSafe",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.OwnableUpgradeSafe>;
    getContractAt(
      name: "OwnedUpgradeabilityProxy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.OwnedUpgradeabilityProxy>;
    getContractAt(
      name: "Proxy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Proxy>;
    getContractAt(
      name: "UpgradeabilityProxy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.UpgradeabilityProxy>;
    getContractAt(
      name: "Spawn",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Spawn>;
    getContractAt(
      name: "ChainLinkPricer",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ChainLinkPricer>;
    getContractAt(
      name: "CompoundPricer",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.CompoundPricer>;
    getContractAt(
      name: "WstethPricer",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.WstethPricer>;
    getContractAt(
      name: "YearnPricer",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.YearnPricer>;
    getContractAt(
      name: "ActionTester",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ActionTester>;
    getContractAt(
      name: "CalculatorTester",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.CalculatorTester>;
    getContractAt(
      name: "CalleeAllowanceTester",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.CalleeAllowanceTester>;
    getContractAt(
      name: "CallTester",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.CallTester>;
    getContractAt(
      name: "FixedPointInt256Tester",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.FixedPointInt256Tester>;
    getContractAt(
      name: "FlashUnwrap",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.FlashUnwrap>;
    getContractAt(
      name: "ForceSend",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ForceSend>;
    getContractAt(
      name: "MarginVaultTester",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MarginVaultTester>;
    getContractAt(
      name: "OtokenImplV1",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.OtokenImplV1>;
    getContractAt(
      name: "SignedConverterTester",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.SignedConverterTester>;
    getContractAt(
      name: "UpgradeableContractV1",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.UpgradeableContractV1>;
    getContractAt(
      name: "UpgradeableContractV2",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.UpgradeableContractV2>;
    getContractAt(
      name: "PriceFeed",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PriceFeed>;
    getContractAt(
      name: "ERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20>;
    getContractAt(
      name: "MintableERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MintableERC20>;
    getContractAt(
      name: "WETH",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.WETH>;
    getContractAt(
      name: "BlackScholesTest",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BlackScholesTest>;
    getContractAt(
      name: "ReentrancyGuard",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ReentrancyGuard>;
    getContractAt(
      name: "UniswapV3HedgingTest",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.UniswapV3HedgingTest>;
    getContractAt(
      name: "Volatility",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Volatility>;

    // default types
    getContractFactory(
      name: string,
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<ethers.ContractFactory>;
    getContractFactory(
      abi: any[],
      bytecode: ethers.utils.BytesLike,
      signer?: ethers.Signer
    ): Promise<ethers.ContractFactory>;
    getContractAt(
      nameOrAbi: string | any[],
      address: string,
      signer?: ethers.Signer
    ): Promise<ethers.Contract>;
  }
}
